[{"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\index.js":"1","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\App.js":"2","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\reportWebVitals.js":"3","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\store.js":"4","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\context\\ThemeContext.js":"5","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\services\\AuthService.js":"6","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\selectors\\AuthSelectors.js":"7","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\context\\ThemeDemo.js":"8","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\Login.js":"9","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\Registration.js":"10","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\ForgotPassword.js":"11","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\PostsReducer.js":"12","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\Reducers.js":"13","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\AuthReducer.js":"14","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\index.js":"15","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\actions\\AuthActions.js":"16","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\actions\\PostTypes.js":"17","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\Setting.js":"18","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\AddCategory.js":"19","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\Footer.js":"20","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\banner\\AboutBanner.js":"21","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\ViewCategories.js":"22","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\banner\\Banner.js":"23","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\MovieOrder.js":"24","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\ViewSocial.js":"25","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\EditSocial.js":"26","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\config\\index.js":"27","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\Dashboard\\Dashboard.js":"28","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\AddSocial.js":"29","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie3.js":"30","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie4.js":"31","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie2.js":"32","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie1.js":"33","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\ViewMovieDetail.js":"34","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie4.js":"35","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie2.js":"36","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie3.js":"37","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie1.js":"38","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie.js":"39","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie.js":"40","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\ViewMovie.js":"41","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\EditCategory.js":"42","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\AddNews.js":"43","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\ViewNews.js":"44","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\EditNews.js":"45","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\PressNews.js":"46","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\ViewCast.js":"47","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\AddCast.js":"48","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\EditCast.js":"49","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\EditTeam.js":"50","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\ViewTeam.js":"51","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\AddTeam.js":"52","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\index.js":"53","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\PageTitle.js":"54","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\LoadingButton.js":"55","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\Loading\\Loading.js":"56","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\SideBar.js":"57","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\Header.js":"58","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\ChatBox.js":"59","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\NavHader.js":"60","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\Logout.js":"61","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Alerts.js":"62","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Notes.js":"63","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Chat.js":"64","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\MsgBox.js":"65"},{"size":750,"mtime":1689917046003,"results":"66","hashOfConfig":"67"},{"size":2280,"mtime":1689917045957,"results":"68","hashOfConfig":"67"},{"size":375,"mtime":1689917046028,"results":"69","hashOfConfig":"67"},{"size":705,"mtime":1689917154311,"results":"70","hashOfConfig":"67"},{"size":9239,"mtime":1689917046107,"results":"71","hashOfConfig":"67"},{"size":1999,"mtime":1689917154252,"results":"72","hashOfConfig":"67"},{"size":105,"mtime":1689917154505,"results":"73","hashOfConfig":"67"},{"size":2393,"mtime":1689917046131,"results":"74","hashOfConfig":"67"},{"size":6101,"mtime":1689917149928,"results":"75","hashOfConfig":"67"},{"size":5159,"mtime":1689917149947,"results":"76","hashOfConfig":"67"},{"size":2005,"mtime":1689917149890,"results":"77","hashOfConfig":"67"},{"size":1666,"mtime":1689917154445,"results":"78","hashOfConfig":"67"},{"size":581,"mtime":1689917154464,"results":"79","hashOfConfig":"67"},{"size":1799,"mtime":1689917154408,"results":"80","hashOfConfig":"67"},{"size":14699,"mtime":1689917145198,"results":"81","hashOfConfig":"67"},{"size":2288,"mtime":1689917154332,"results":"82","hashOfConfig":"67"},{"size":503,"mtime":1689917154369,"results":"83","hashOfConfig":"67"},{"size":13307,"mtime":1689917149655,"results":"84","hashOfConfig":"67"},{"size":3757,"mtime":1689917150114,"results":"85","hashOfConfig":"67"},{"size":441,"mtime":1689917149617,"results":"86","hashOfConfig":"67"},{"size":7108,"mtime":1689917150010,"results":"87","hashOfConfig":"67"},{"size":4317,"mtime":1689917150152,"results":"88","hashOfConfig":"67"},{"size":6133,"mtime":1689917150030,"results":"89","hashOfConfig":"67"},{"size":6659,"mtime":1689917150410,"results":"90","hashOfConfig":"67"},{"size":4790,"mtime":1689917150629,"results":"91","hashOfConfig":"67"},{"size":5934,"mtime":1689917150591,"results":"92","hashOfConfig":"67"},{"size":572,"mtime":1691394850472,"results":"93","hashOfConfig":"67"},{"size":10010,"mtime":1689917145782,"results":"94","hashOfConfig":"67"},{"size":4933,"mtime":1689917150573,"results":"95","hashOfConfig":"67"},{"size":6073,"mtime":1689917150371,"results":"96","hashOfConfig":"67"},{"size":8145,"mtime":1689917150391,"results":"97","hashOfConfig":"67"},{"size":13920,"mtime":1689917150349,"results":"98","hashOfConfig":"67"},{"size":11993,"mtime":1689917150330,"results":"99","hashOfConfig":"67"},{"size":15022,"mtime":1689917150449,"results":"100","hashOfConfig":"67"},{"size":7726,"mtime":1689917150252,"results":"101","hashOfConfig":"67"},{"size":13640,"mtime":1689917150213,"results":"102","hashOfConfig":"67"},{"size":5497,"mtime":1689917150231,"results":"103","hashOfConfig":"67"},{"size":11912,"mtime":1689917150194,"results":"104","hashOfConfig":"67"},{"size":13299,"mtime":1689917150291,"results":"105","hashOfConfig":"67"},{"size":10379,"mtime":1689917150173,"results":"106","hashOfConfig":"67"},{"size":5960,"mtime":1689917150429,"results":"107","hashOfConfig":"67"},{"size":4452,"mtime":1689917150133,"results":"108","hashOfConfig":"67"},{"size":6804,"mtime":1689917150492,"results":"109","hashOfConfig":"67"},{"size":5383,"mtime":1689917150550,"results":"110","hashOfConfig":"67"},{"size":7889,"mtime":1689917150511,"results":"111","hashOfConfig":"67"},{"size":5869,"mtime":1689917150531,"results":"112","hashOfConfig":"67"},{"size":4233,"mtime":1689917150092,"results":"113","hashOfConfig":"67"},{"size":3878,"mtime":1689917150052,"results":"114","hashOfConfig":"67"},{"size":4586,"mtime":1689917150072,"results":"115","hashOfConfig":"67"},{"size":7247,"mtime":1689917150672,"results":"116","hashOfConfig":"67"},{"size":5380,"mtime":1689917150691,"results":"117","hashOfConfig":"67"},{"size":6249,"mtime":1689917150651,"results":"118","hashOfConfig":"67"},{"size":877,"mtime":1689917149753,"results":"119","hashOfConfig":"67"},{"size":1171,"mtime":1689917149635,"results":"120","hashOfConfig":"67"},{"size":216,"mtime":1689917145239,"results":"121","hashOfConfig":"67"},{"size":352,"mtime":1689917147604,"results":"122","hashOfConfig":"67"},{"size":32835,"mtime":1689917149734,"results":"123","hashOfConfig":"67"},{"size":2568,"mtime":1689917149677,"results":"124","hashOfConfig":"67"},{"size":2328,"mtime":1689917149579,"results":"125","hashOfConfig":"67"},{"size":1240,"mtime":1689917149714,"results":"126","hashOfConfig":"67"},{"size":1315,"mtime":1689917149696,"results":"127","hashOfConfig":"67"},{"size":5896,"mtime":1689917149138,"results":"128","hashOfConfig":"67"},{"size":5950,"mtime":1689917149195,"results":"129","hashOfConfig":"67"},{"size":12987,"mtime":1689917149157,"results":"130","hashOfConfig":"67"},{"size":12994,"mtime":1689917149176,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ye6r8",{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\index.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\App.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\reportWebVitals.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\store.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\context\\ThemeContext.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\services\\AuthService.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\selectors\\AuthSelectors.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\context\\ThemeDemo.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\Login.js",["297"],"import React, { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  loadingToggleAction,\r\n  loginAction,\r\n} from '../../store/actions/AuthActions';\r\n\r\n// image\r\nimport logo from '../../images/logo-full.png';\r\nimport loginbg from '../../images/pic1.png';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState('');\r\n  let errorsObj = { email: '', password: '' };\r\n  const [errors, setErrors] = useState(errorsObj);\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function onLogin(e) {\r\n    e.preventDefault();\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n    if (email === '') {\r\n      errorObj.email = 'Email is Required';\r\n      error = true;\r\n    }\r\n    if (password === '') {\r\n      errorObj.password = 'Password is Required';\r\n      error = true;\r\n    }\r\n    setErrors(errorObj);\r\n    if (error) {\r\n      return;\r\n    }\r\n    dispatch(loadingToggleAction(true));\r\n    dispatch(loginAction(email, password, props.history));\r\n  }\r\n\r\n  return (\r\n    <div className='authincation d-flex flex-column flex-lg-row flex-column-fluid'>\r\n      <div className='login-aside text-center  d-flex flex-column flex-row-auto'>\r\n        <div className='d-flex flex-column-auto flex-column pt-lg-40 pt-15'>\r\n          <div className='text-center mb-4 pt-5'>\r\n            <img src={logo} alt='' />\r\n          </div>\r\n          <h3 className='mb-2'>Welcome back!</h3>\r\n        </div>\r\n        <div\r\n          className='aside-image'\r\n          style={{ backgroundImage: 'url(' + loginbg + ')' }}></div>\r\n      </div>\r\n      <div className='container flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto'>\r\n        <div className='d-flex justify-content-center h-100 align-items-center'>\r\n          <div className='authincation-content style-2'>\r\n            <div className='row no-gutters'>\r\n              <div className='col-xl-12 tab-content'>\r\n                <div id='sign-in' className='auth-form   form-validation'>\r\n                  {props.errorMessage && (\r\n                    <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\r\n                      {props.errorMessage}\r\n                    </div>\r\n                  )}\r\n                  {props.successMessage && (\r\n                    <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\r\n                      {props.successMessage}\r\n                    </div>\r\n                  )}\r\n                  <form onSubmit={onLogin} className='form-validate'>\r\n                    <h3 className='text-center mb-4 text-black'>\r\n                      Sign in your account\r\n                    </h3>\r\n                    <div className='form-group mb-3'>\r\n                      <label className='mb-1' htmlFor='val-email'>\r\n                        <strong>Email</strong>\r\n                      </label>\r\n                      <div>\r\n                        <input\r\n                          type='email'\r\n                          className='form-control'\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                          placeholder='Type Your Email Address'\r\n                        />\r\n                      </div>\r\n                      {errors.email && (\r\n                        <div className='text-danger fs-12'>{errors.email}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className='form-group mb-3'>\r\n                      <label className='mb-1'>\r\n                        <strong>Password</strong>\r\n                      </label>\r\n                      <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        value={password}\r\n                        placeholder='Type Your Password'\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className='text-danger fs-12'>\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className='form-row d-flex justify-content-between mt-4 mb-2'>\r\n                      <div className='form-group mb-3'>\r\n                        <div className='custom-control custom-checkbox ml-1'>\r\n                          <input\r\n                            type='checkbox'\r\n                            className='form-check-input'\r\n                            id='basic_checkbox_1'\r\n                          />\r\n                          <label\r\n                            className='form-check-label'\r\n                            htmlFor='basic_checkbox_1'>\r\n                            Remember my preference\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='text-center form-group mb-3'>\r\n                      <button\r\n                        type='submit'\r\n                        className='btn btn-primary btn-block'>\r\n                        Sign In\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                  <div className='new-account mt-3'>\r\n                    {/* <p>\r\n                      Don't have an account?{' '}\r\n                      <Link className='text-primary' to='./page-register'>\r\n                        Sign up\r\n                      </Link>\r\n                    </p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\Registration.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\ForgotPassword.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\PostsReducer.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\Reducers.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\reducers\\AuthReducer.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\index.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\actions\\AuthActions.js",["298"],"import {\n  formatError,\n  login,\n  runLogoutTimer,\n  saveTokenInLocalStorage,\n  signUp,\n} from '../../services/AuthService';\n\nexport const SIGNUP_CONFIRMED_ACTION = '[signup action] confirmed signup';\nexport const SIGNUP_FAILED_ACTION = '[signup action] failed signup';\nexport const LOGIN_CONFIRMED_ACTION = '[login action] confirmed login';\nexport const LOGIN_FAILED_ACTION = '[login action] failed login';\nexport const LOADING_TOGGLE_ACTION = '[Loading action] toggle loading';\nexport const LOGOUT_ACTION = '[Logout action] logout action';\n\nexport function signupAction(name, email, password, history) {\n  return (dispatch) => {\n    signUp(name, email, password)\n      .then((response) => {\n        console.log(response);\n        saveTokenInLocalStorage(response.data);\n        dispatch(confirmedSignupAction(response.data));\n        history.push('/dashboard');\n      })\n      .catch((error) => {\n        const errorMessage = formatError(error.response.data);\n        dispatch(signupFailedAction(errorMessage));\n      });\n  };\n}\n\nexport function logout(history) {\n  localStorage.removeItem('userDetails');\n  history.push('/login');\n  return {\n    type: LOGOUT_ACTION,\n  };\n}\n\nexport function loginAction(email, password, history) {\n  return (dispatch) => {\n    login(email, password)\n      .then((response) => {\n        console.log('response :>> ', response);\n        \n        saveTokenInLocalStorage(response.data);\n        dispatch(loginConfirmedAction(response.data));\n        history.push('/dashboard');\n      })\n      .catch((error) => {\n        //console.log(error);\n        const errorMessage = formatError(error.response.data);\n        dispatch(loginFailedAction(errorMessage));\n      });\n  };\n}\n\nexport function loginFailedAction(data) {\n  return {\n    type: LOGIN_FAILED_ACTION,\n    payload: data,\n  };\n}\n\nexport function loginConfirmedAction(data) {\n  return {\n    type: LOGIN_CONFIRMED_ACTION,\n    payload: data,\n  };\n}\n\nexport function confirmedSignupAction(payload) {\n  return {\n    type: SIGNUP_CONFIRMED_ACTION,\n    payload,\n  };\n}\n\nexport function signupFailedAction(message) {\n  return {\n    type: SIGNUP_FAILED_ACTION,\n    payload: message,\n  };\n}\n\nexport function loadingToggleAction(status) {\n  return {\n    type: LOADING_TOGGLE_ACTION,\n    payload: status,\n  };\n}\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\store\\actions\\PostTypes.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\Setting.js",["299","300","301","302","303","304","305","306","307","308"],"import React, { useState, useContext } from 'react';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport demo1 from '../../images/demo/pic1.jpg';\r\nimport demo2 from '../../images/demo/pic2.jpg';\r\nimport demo3 from '../../images/demo/pic3.jpg';\r\nimport demo4 from '../../images/demo/pic4.jpg';\r\nimport demo5 from '../../images/demo/pic5.jpg';\r\nimport demo6 from '../../images/demo/pic6.jpg';\r\n\r\nconst Setting = () => {\r\n  const [settingToggle, setSettingToggle] = useState(false);\r\n  const [demoToggle, setDemoToggle] = useState(false);\r\n  const {\r\n    body,\r\n    sideBarOption,\r\n    layoutOption,\r\n    backgroundOption,\r\n    sidebarposition,\r\n    headerPositions,\r\n    containerPosition,\r\n    fontFamily,\r\n    changePrimaryColor,\r\n    changeNavigationHader,\r\n    sideBarStyle,\r\n    changeSideBarStyle,\r\n    changeSideBarPostion,\r\n    sidebarpositions,\r\n    changeHeaderPostion,\r\n    headerposition,\r\n    changeSideBarLayout,\r\n    sidebarLayout,\r\n    colors,\r\n    chnageHaderColor,\r\n    chnageSidebarColor,\r\n    changeBackground,\r\n    background,\r\n    changeContainerPosition,\r\n    containerPosition_,\r\n    setDemoTheme,\r\n  } = useContext(ThemeContext);\r\n  return (\r\n    <>\r\n      <div className={`sidebar-right ${settingToggle ? 'show' : ''}`}>\r\n        <div\r\n          className='bg-overlay'\r\n          onClick={() => setSettingToggle(!settingToggle)}></div>\r\n        <Link\r\n          to='#'\r\n          className='sidebar-right-trigger wave-effect wave-effect-x'\r\n          onClick={() => setSettingToggle(!settingToggle)}>\r\n          <span>\r\n            <i className='fa fa-cog fa-spin' />\r\n          </span>\r\n        </Link>\r\n        <Link\r\n          to='#'\r\n          className='sidebar-close-trigger'\r\n          onClick={() => setSettingToggle(!settingToggle)}>\r\n          <span>\r\n            <i className='la-times las'></i>\r\n          </span>\r\n        </Link>\r\n        <div className='sidebar-right-inner'>\r\n          <div className='tab-content tab-content-default tabcontent-border'>\r\n            <div\r\n              className='tab-pane fade active show'\r\n              id='home8'\r\n              role='tabpanel'>\r\n              <div className='admin-settings'>\r\n                <h4>Pick your style</h4>\r\n                <Tab.Container defaultActiveKey='Theme'>\r\n                  <div className='card-action card-tabs mt-3 mt-sm-0'>\r\n                    <Nav as='ul' className='nav nav-tabs' role='tablist'>\r\n                      <Nav.Item as='li' className='nav-item'>\r\n                        <Nav.Link\r\n                          as='a'\r\n                          className='nav-link c-pointer'\r\n                          data-toggle='tab'\r\n                          eventKey='Theme'\r\n                          role='tab'>\r\n                          {' '}\r\n                          Theme{' '}\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item as='li' className='nav-item'>\r\n                        <Nav.Link\r\n                          as='a'\r\n                          className='nav-link c-pointer'\r\n                          data-toggle='tab'\r\n                          eventKey='Header'\r\n                          role='tab'>\r\n                          {' '}\r\n                          Header{' '}\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item as='li' className='nav-item'>\r\n                        <Nav.Link\r\n                          as='a'\r\n                          className='nav-link c-pointer'\r\n                          data-toggle='tab'\r\n                          eventKey='Content'\r\n                          role='tab'>\r\n                          Content\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </div>\r\n                  <Tab.Content className=''>\r\n                    <Tab.Pane className='tab-pane fade ' eventKey='Theme'>\r\n                      <div className='admin-settings'>\r\n                        <div className='row'>\r\n                          <div className='col-sm-12'>\r\n                            <p>Background</p>{' '}\r\n                            <Select\r\n                              defaultValue={background}\r\n                              onChange={(e) => changeBackground(e)}\r\n                              options={backgroundOption}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Primary Color</p>\r\n                            <div>\r\n                              {colors.map((color, i) => (\r\n                                <span key={i}>\r\n                                  <input\r\n                                    type='radio'\r\n                                    name='primary_color'\r\n                                    defaultValue={color}\r\n                                    className='filled-in chk-col-primary'\r\n                                    id={`primary_${color}`}\r\n                                    onClick={() => changePrimaryColor(color)}\r\n                                  />\r\n                                  <label htmlFor={`primary_${color}`} />\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Navigation Header</p>\r\n                            <div>\r\n                              {colors.map((color, i) => (\r\n                                <span key={i}>\r\n                                  <input\r\n                                    type='radio'\r\n                                    name='navigation_header'\r\n                                    defaultValue={color}\r\n                                    className='filled-in chk-col-primary'\r\n                                    id={`nav_header_${color}`}\r\n                                    onClick={() => changeNavigationHader(color)}\r\n                                  />\r\n                                  <label htmlFor={`nav_header_${color}`} />\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Header</p>\r\n                            <div>\r\n                              {colors.map((color, i) => (\r\n                                <span key={i}>\r\n                                  <input\r\n                                    type='radio'\r\n                                    name='header_bg'\r\n                                    defaultValue={color}\r\n                                    className='filled-in chk-col-primary'\r\n                                    id={`header_${color}`}\r\n                                    onClick={() => chnageHaderColor(color)}\r\n                                  />\r\n                                  <label htmlFor={`header_${color}`} />\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Sidebar</p>\r\n                            <div>\r\n                              {colors.map((color, i) => (\r\n                                <span key={i}>\r\n                                  <input\r\n                                    type='radio'\r\n                                    name='navigation_header'\r\n                                    defaultValue={color}\r\n                                    className='filled-in chk-col-primary'\r\n                                    id={`sidebar_${color}`}\r\n                                    onClick={() => chnageSidebarColor(color)}\r\n                                  />\r\n                                  <label htmlFor={`sidebar_${color}`} />\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane className='tab-pane fade' eventKey='Header'>\r\n                      <div className='admin-settings'>\r\n                        <div className='row'>\r\n                          <div className='col-sm-6'>\r\n                            <p>Layout</p>{' '}\r\n                            <Select\r\n                              defaultValue={sidebarLayout}\r\n                              onChange={(e) => changeSideBarLayout(e)}\r\n                              options={layoutOption}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Header position</p>{' '}\r\n                            <Select\r\n                              defaultValue={headerposition}\r\n                              onChange={(e) => changeHeaderPostion(e)}\r\n                              options={headerPositions}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Sidebar</p>{' '}\r\n                            <Select\r\n                              defaultValue={sideBarStyle}\r\n                              onChange={(e) => changeSideBarStyle(e)}\r\n                              options={sideBarOption}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Sidebar position</p>{' '}\r\n                            <Select\r\n                              defaultValue={sidebarposition}\r\n                              onChange={(e) => changeSideBarPostion(e)}\r\n                              options={sidebarpositions}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane className='tab-pane fade' eventKey='Content'>\r\n                      <div className='admin-settings'>\r\n                        <div className='row'>\r\n                          <div className='col-sm-6'>\r\n                            <p>Container</p>{' '}\r\n                            <Select\r\n                              defaultValue={containerPosition_}\r\n                              onChange={(e) => changeContainerPosition(e)}\r\n                              options={containerPosition}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-6'>\r\n                            <p>Body Font</p>{' '}\r\n                            <Select\r\n                              defaultValue={fontFamily[1]}\r\n                              onChange={(e) =>\r\n                                body.setAttribute('data-typography', e.value)\r\n                              }\r\n                              options={fontFamily}\r\n                              style={{\r\n                                lineHeight: '40px',\r\n                                color: '#7e7e7e',\r\n                                paddingLeft: ' 15px',\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </Tab.Container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\AddCategory.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\Footer.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\banner\\AboutBanner.js",["309","310","311","312","313"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst AboutBanner = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [submitting, setSubmitting] = useState(false);\n  const [banners, setBanners] = useState([]);\n  const [type, setType] = useState('image');\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n\n    data.append('image', file);\n    data.append('type', type);\n    // // add a image to data\n\n    // axios\n    try {\n      let res = await axios.post(`${API_URL}banner/about`, data, header);\n      // setBanners(res.data);\n      console.log(res.data);\n      setBanners(res.data);\n      setFile('');\n      swal('Success', 'Banner added successfully', 'success');\n      // reset the form using query selector\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const handleDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(`${API_URL}banner/${id}`, header);\n        const newBanner = banners.filter((banner) => banner._id !== id);\n        setBanners(newBanner);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchBanners();\n  }, []);\n  const fetchBanners = async () => {\n    try {\n      const res = await axios.get(`${API_URL}banner/about`, header);\n      setBanners(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Manage'\n        motherMenu='Banner'\n        pageContent='Manage Banner'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Manage Banners</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Type</th>\n                          <th>Banner</th>\n                        </tr>\n                        <tr>\n                          <td>{banners.type}</td>\n                          <td>\n                            {banners.type === 'image' && (\n                              <img\n                                src={banners.image}\n                                alt=''\n                                className='img img-rounded'\n                                style={{\n                                  width: '150px',\n                                }}\n                              />\n                            )}\n                            {banners.type === 'video' && (\n                              <>\n                                <video width='150' height='150' controls>\n                                  <source\n                                    src={banners.image}\n                                    type='video/mp4'\n                                  />\n                                  Your browser does not support HTML5 video.\n                                </video>\n                              </>\n                            )}\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-3 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <br />\n                      <br />\n                      <br />\n                      <div className='from-file'>\n                        <select\n                          className=' form-control'\n                          name='type'\n                          required\n                          onChange={(e) => setType(e.target.value)}>\n                          <option value='image'>image</option>\n                          <option value='video'>video</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className='form-group col-md-3 mb-3'>\n                      <label htmlFor=''>\n                        Image\n                        <small className='d-inline-block m-3'>\n                          Recommended Size (WxH) : {ImageSize.mainBanner}\n                        </small>\n                      </label>\n                      <div className='from-file'>\n                        <input\n                          type='file'\n                          className='form-file-input form-control'\n                          placeholder='Thumbnail'\n                          name='thumbnail'\n                          accept='image/*'\n                          required\n                          onChange={(e) => handleFile(e, 'thumbnail')}\n                        />\n                      </div>\n                    </div>\n\n                    <div\n                      className='form-col-md-3 mt-3 d-flex '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Change Banner\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AboutBanner;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\ViewCategories.js",["314","315"],"import React, { useState, useRef, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst ViewCategories = () => {\n  const history = useHistory();\n  const [categories, setCategories] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    const response = await axios.get(`${API_URL}category`);\n    setCategories(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}category/${id}`, header);\n        swal('Success', 'Category Deleted Successfully', 'success');\n        setCategories(categories.filter((category) => category._id !== id));\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/category-edit/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='View'\n        motherMenu='Category'\n        pageContent='View Categories'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View Categories</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Type</th>\n                          <th>Title</th>\n                          <th>Created By</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {categories.map(({ _id, type, title, createdBy }) => (\n                          <tr key={_id}>\n                            <td>\n                              {type === '1'\n                                ? `News Category`\n                                : `Movie Category`}\n                            </td>\n                            <td>{title}</td>\n                            <td>{createdBy?.name}</td>\n                            <td>\n                              <span\n                                className='btn btn-dark shadow btn-xs sharp me-1'\n                                onClick={() => handleEdit(_id)}>\n                                <i className='fa fa-pen'></i>\n                              </span>\n                              <span\n                                className='btn btn-danger shadow btn-xs sharp'\n                                onClick={() => handleDelete(_id)}>\n                                <i className='fa fa-trash'></i>\n                              </span>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewCategories;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\banner\\Banner.js",["316","317","318","319"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst Banner = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [submitting, setSubmitting] = useState(false);\n  const [banners, setBanners] = useState([]);\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n\n    data.append('image', file);\n    // // add a image to data\n\n    // axios\n    try {\n      let res = await axios.post(`${API_URL}banner`, data, header);\n      // setBanners(res.data);\n      setBanners([...banners, res.data]);\n      setFile('');\n      swal('Success', 'Banner added successfully', 'success');\n      // reset the form using query selector\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const handleDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(`${API_URL}banner/${id}`, header);\n        const newBanner = banners.filter((banner) => banner._id !== id);\n        setBanners(newBanner);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchBanners();\n  }, []);\n  const fetchBanners = async () => {\n    try {\n      const res = await axios.get(`${API_URL}banner`, header);\n      setBanners(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Manage'\n        motherMenu='Banner'\n        pageContent='Manage Banner'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Manage Banners</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Banner</th>\n                          <th>Action</th>\n                        </tr>\n                        {banners.map(({ _id, image }) => (\n                          <tr key={_id}>\n                            <td>\n                              <img\n                                src={image}\n                                alt=''\n                                className='img img-rounded'\n                                style={{\n                                  width: '150px',\n                                }}\n                              />\n                            </td>\n\n                            <td>\n                              <button\n                                className='btn btn-primary'\n                                style={{ backgroundColor: '#ff0000' }}\n                                onClick={() => handleDelete(_id)}>\n                                <span className='fa fa-trash'></span>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-3 mb-3'>\n                      <label htmlFor=''>\n                        Image\n                        <small className='d-inline-block m-3'>\n                          Recommended Size (WxH) : {ImageSize.mainBanner}\n                        </small>\n                      </label>\n                      <div className='from-file'>\n                        <input\n                          type='file'\n                          className='form-file-input form-control'\n                          placeholder='Thumbnail'\n                          name='thumbnail'\n                          accept='image/*'\n                          required\n                          onChange={(e) => handleFile(e, 'thumbnail')}\n                        />\n                      </div>\n                    </div>\n\n                    <div\n                      className='form-col-md-3 mt-3 d-flex '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Add Banner\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Banner;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\MovieOrder.js",["320","321","322","323","324"],"import React, { useState, useRef, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst MovieOrder = () => {\n  const history = useHistory();\n  const [movies, setMovies] = useState([]);\n  const [values, setValues] = useState([]);\n  const [orderedMovies, setOrderedMovies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchMovies();\n    fetchOrderedMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    const response = await axios.get(`${API_URL}movie`, header);\n    console.log(response);\n    setMovies(response.data);\n  };\n  const fetchOrderedMovies = async () => {\n    const response = await axios.get(`${API_URL}movie/order/view`, header);\n    setOrderedMovies(response.data);\n    setIsLoaded(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const res = await axios.post(`${API_URL}movie/order/add`, values, header);\n      const data = res.data;\n\n      // add to ordered movies\n      const newOrderedMovies = [...orderedMovies, data];\n\n      setOrderedMovies(newOrderedMovies);\n\n      swal('Success', 'Movie Order Updated Successfully', 'success');\n    } catch (error) {\n      swal('Oops !', 'Something went wrong', 'error');\n    }\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleDelete = (id) => {\n    // confirm with sweet alert\n    swal({\n      title: 'Are you sure?',\n      text: 'Once deleted, you will not be able to recover this allocation!',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await axios.delete(\n            `${API_URL}movie/order/delete/${id}`,\n            header\n          );\n          const data = res.data;\n\n          // remove from ordered movies\n          const newOrderedMovies = orderedMovies.filter(\n            (movie) => movie._id !== id\n          );\n\n          setOrderedMovies(newOrderedMovies);\n\n          swal('Success', 'Movie Allocation Deleted Successfully', 'success');\n        } catch (error) {\n          const { status } = error.response;\n\n          swal('Error', 'Something Went Wrong', 'error');\n          if (status === 401) {\n            localStorage.removeItem('userDetails');\n            window.location.reload();\n          }\n        }\n      }\n    });\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Allocate'\n        motherMenu='Movies'\n        pageContent='Allocate Movies'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Movies</h4>\n            </div>\n            {isLoaded && (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='table-responsive'>\n                    <table className='table table-striped table-bordered'>\n                      <thead>\n                        <tr>\n                          <th>Type</th>\n                          <th>Movie Name</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {orderedMovies.map((movie) => (\n                          <tr key={movie._id}>\n                            <td>{movie.type}</td>\n                            <td>{movie.movie?.title}</td>\n                            <td>\n                              <button\n                                className='btn btn-primary btn-xs'\n                                onClick={() => handleDelete(movie._id)}>\n                                <i className='fa fa-trash'></i>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            )}\n            {isLoaded ? (\n              <div className='card-body'>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                  <div className='row'>\n                    <div className='form-group col-sm-6'>\n                      <label>Type</label>\n                      <select\n                        name='type'\n                        id=''\n                        className='form-control'\n                        required\n                        onChange={(e) => handleChange(e)}>\n                        <option value=''>Select Type</option>\n                        <option value='upcoming'>upcoming</option>\n                        <option value='featured'>featured</option>\n                      </select>\n                    </div>\n                    <div className='form-group col-sm-6'>\n                      <label>Movie</label>\n                      <select\n                        className='form-control'\n                        name='id'\n                        required\n                        onChange={(e) => handleChange(e)}>\n                        <option value=''>Select Movie</option>\n                        {movies.map((movie) => (\n                          <option key={movie._id} value={movie._id}>\n                            {movie.title} - ({movie.genre})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className='col-sm-6 mt-5'>\n                      <button type='submit' className='btn  btn-primary'>\n                        Allocate\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieOrder;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\ViewSocial.js",["325"],"import React, { useState, useRef, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst ViewSocial = () => {\n  const history = useHistory();\n  const [social, setSocial] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchSocial();\n  }, []);\n\n  const fetchSocial = async () => {\n    const response = await axios.get(`${API_URL}social`);\n    setSocial(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}social/${id}`, header);\n        swal('Success', 'Social Deleted Successfully', 'success');\n        setSocial(social.filter((soc) => soc._id !== id));\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/social-edit/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='View'\n        motherMenu='Social'\n        pageContent='View Social'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View Social</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Type</th>\n                          <th>Image</th>\n                          <th>Url</th>\n                          <th>Created By</th>\n                          <th>Created At</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {social.map(\n                          ({ _id, type, url, image, createdAt, createdBy }) => (\n                            <tr key={_id}>\n                              <td>{type}</td>\n                              <td>\n                                <img\n                                  className='img-responsive img'\n                                  width='55'\n                                  height='55'\n                                  src={image}\n                                  alt=''\n                                />\n                              </td>\n                              <td>\n                                <Link to={url}>{url}</Link>\n                              </td>\n                              <td>{createdBy?.name}</td>\n                              <td>{createdAt}</td>\n                              <td>\n                                <span\n                                  className='btn btn-dark shadow btn-xs sharp me-1'\n                                  onClick={() => handleEdit(_id)}>\n                                  <i className='fa fa-pen'></i>\n                                </span>\n                                <span\n                                  className='btn btn-danger shadow btn-xs sharp'\n                                  onClick={() => handleDelete(_id)}>\n                                  <i className='fa fa-trash'></i>\n                                </span>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewSocial;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\EditSocial.js",["326","327"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst EditSocial = () => {\n  const initialValues = [\n    {\n      type: 'twitter',\n      url: '',\n    },\n  ];\n  const { id } = useParams();\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  const [submitting, setSubmitting] = useState(false);\n\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.category);\n    setSubmitting(true);\n    // check if the category is object or string\n\n    // form data with image\n    const data = new FormData();\n    data.append('type', values.type);\n    data.append('url', values.url);\n    if (file) {\n      data.append('image', file);\n    }\n\n    // // axios\n    try {\n      await axios.patch(`${API_URL}social/${id}`, data, header);\n      swal('Success', 'Social Updated Successfully', 'success');\n      history.push('/social-view');\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchSocial();\n  }, []);\n\n  const fetchSocial = async () => {\n    try {\n      const res = await axios.get(`${API_URL}social/${id}`, header);\n      setValues(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Social'\n        pageContent='Edit Social'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Social</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-6 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <select\n                        type='text'\n                        name='type'\n                        className='form-control input-default '\n                        placeholder='input-default'\n                        required\n                        onChange={(e) => handleChange(e)}>\n                        <option value={values.type}>{values.type}</option>\n                        <option value='twitter'>Twitter </option>\n                        <option value='instagram'>Instagram </option>\n                      </select>\n                    </div>\n                    <div className='form-group col-md-6 mb-3'>\n                      <label htmlFor=''>Url</label>\n                      <input\n                        type='text'\n                        className='form-control input-default '\n                        placeholder='Url'\n                        name='url'\n                        required\n                        value={values.url}\n                        onChange={(e) => handleChange(e)}\n                      />\n                    </div>\n                    <div className='form-group col-md-6 mb-3'>\n                      <label htmlFor=''>\n                        Image (leave blank for no change)\n                        <small className='d-inline-block m-3'>\n                          Recommended Size (WxH) : {ImageSize.socialMedia}\n                        </small>\n                      </label>\n                      <div className='from-file d-flex'>\n                        <img\n                          src={values.image}\n                          className='img img-responsive '\n                          width='55'\n                          height='55'\n                        />\n                        <input\n                          type='file'\n                          className='form-file-input form-control'\n                          placeholder='image'\n                          name='image'\n                          onChange={(e) => handleFile(e)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className='form-col-md-12 mt-3'>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Edit Social\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditSocial;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\config\\index.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\Dashboard\\Dashboard.js",["328"],"import swal from '@sweetalert/with-react';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { API_URL } from '../../../config';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Dashboard = () => {\r\n  const [statsData, setStatsData] = useState({});\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const userDetails = localStorage.getItem('userDetails');\r\n  const user = JSON.parse(userDetails);\r\n  const token = user.token;\r\n  const header = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      token: token,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      let res = await axios.get(`${API_URL}dashboard`, header);\r\n      console.log(res.data);\r\n      setStatsData(res.data);\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      //   get the status error code\r\n      const { status } = error.response;\r\n\r\n      swal('Error', 'Something Went Wrong', 'error');\r\n      if (status === 401) {\r\n        localStorage.removeItem('userDetails');\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-xl-12 mt-4'>\r\n          <div className='row'>\r\n            <div className='col-xl-12'>\r\n              <div className='card'>\r\n                <div className='card-body'>\r\n                  {isLoaded ? (\r\n                    <>\r\n                      <div className='row shapreter-row mb-5'>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i className='fas fa-eye'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp end={statsData.userVisit} duration={2} />\r\n                            </h3>\r\n                            <span className='fs-14'>Visits</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i className='fas fa-newspaper'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp end={statsData.newsCount} duration={3} />\r\n                            </h3>\r\n                            <span className='fs-14'>News</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-hashtag'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp\r\n                                end={statsData.socialCount}\r\n                                duration={5}\r\n                              />\r\n                            </h3>\r\n                            <span className='fs-14'>Social</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-image'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp\r\n                                end={statsData.bannerCount}\r\n                                duration={2}\r\n                              />\r\n                            </h3>\r\n                            <span className='fs-14'>Banner</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className='row shapreter-row'>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-user'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp end={statsData.castCount} duration={3} />\r\n                            </h3>\r\n                            <span className='fs-14'>Cast</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-users'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp end={statsData.teamCount} duration={2} />\r\n                            </h3>\r\n                            <span className='fs-14'>Team</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-list'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp\r\n                                end={statsData.categoryCount}\r\n                                duration={2}\r\n                              />\r\n                            </h3>\r\n                            <span className='fs-14'>Categories</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-xl-3 col-lg-3 col-sm-4 col-6'>\r\n                          <div className='static-icon'>\r\n                            <span>\r\n                              <i class='fas fa-film'></i>\r\n                            </span>\r\n                            <h3 className='count'>\r\n                              <CountUp\r\n                                end={statsData.movieCount}\r\n                                duration={3}\r\n                              />\r\n                            </h3>\r\n                            <span className='fs-14'>Movies</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <Loading />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {isLoaded && (\r\n              <div className='col-xl-6'>\r\n                <div className='card'>\r\n                  <div className='card-body'>\r\n                    <h4 className='header-title'>Latest News</h4>\r\n                    <div className='table-responsive'>\r\n                      <table className='table table-hover mb-0'>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Title</th>\r\n                            <th>Image</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {statsData.news.map((news, index) => (\r\n                            <tr key={index}>\r\n                              <td>{news.title}</td>\r\n                              <td>\r\n                                <img\r\n                                  src={news.image}\r\n                                  alt='news'\r\n                                  width='50'\r\n                                  height='50'\r\n                                />\r\n                              </td>\r\n                              <td>{news.createdAt}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {isLoaded && (\r\n              <div className='col-xl-6'>\r\n                <div className='card'>\r\n                  <div className='card-body'>\r\n                    <h4 className='header-title'>Latest Social</h4>\r\n                    <div className='table-responsive'>\r\n                      <table className='table table-hover mb-0'>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {statsData.social.map((social, index) => (\r\n                            <tr key={index}>\r\n                              <td>\r\n                                <img\r\n                                  src={social.image}\r\n                                  alt='social'\r\n                                  width='50'\r\n                                  height='50'\r\n                                />\r\n                              </td>\r\n                              <td>{social.createdAt}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className='col-xl-6'></div>\r\n            <div className='col-xl-12'></div>\r\n            <div className='col-xl-6'>\r\n              <div className='row'>\r\n                <div className='col-xl-12'></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\social\\AddSocial.js",["329","330","331"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst AddSocial = () => {\n  const initialValues = [\n    {\n      type: 'twitter',\n      url: '',\n    },\n  ];\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n    // get token from localstorage\n    const userDetails = localStorage.getItem('userDetails');\n    const user = JSON.parse(userDetails);\n    const token = user.token;\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: token,\n      },\n    };\n    // form data with image\n    const data = new FormData();\n    data.append('type', values.type);\n    data.append('url', values.url);\n    data.append('image', file);\n    // add a image to data\n\n    // // axios\n    try {\n      await axios.post(`${API_URL}social`, data, header);\n      swal('Success', 'Social Added Successfully', 'success');\n      setValues({\n        type: 'twitter',\n        url: '',\n      });\n      setFile('');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Add'\n        motherMenu='Social'\n        pageContent='Add Social'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Social</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Type</label>\n                    <select\n                      type='text'\n                      name='type'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value=''>------</option>\n                      <option value='twitter'>Twitter </option>\n                      <option value='instagram'>Instagram </option>\n                    </select>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Url</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Url'\n                      name='url'\n                      required\n                      value={values.url}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.socialMedia}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        required\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Add Social\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddSocial;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie3.js",["332","333","334","335","336"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst EditMovie3 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n  const { movie_id } = useParams();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/production/${movie_id}`,\n        values,\n        header\n      );\n      swal('Success', 'Production added successfully', 'success');\n      history.push(`/movie-edit/4/${movie_id}`);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      let res = await axios.get(`${API_URL}movie/${movie_id}`, header);\n\n      if (res.data?.production.length > 0) {\n        let length = res.data?.production.length;\n        // get a last index values of production and store it to movieProductions\n        let lastIndex = res.data?.production[length - 1];\n        setValues(lastIndex);\n      } else {\n        setValues(res.data.production);\n      }\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Movie'\n        pageContent='Edit Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Production Details</h4>\n            </div>\n\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Directed By</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Directed By'\n                      name='directed_by'\n                      required\n                      value={values.directed_by}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Written By</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Written By'\n                      name='written_by'\n                      required\n                      value={values.written_by}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                \n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Country of Origin</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Country of Origin'\n                      name='country_of_origin'\n                      required\n                      value={values.country_of_origin}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Language</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Language'\n                      name='language'\n                      required\n                      value={values.language}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Run Time</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Run Time'\n                      name='run_time'\n                      required\n                      value={values.run_time}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div\n                    className='form-col-md-12 mt-3 d-flex '\n                    style={{ justifyContent: 'space-between' }}>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Save\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie3;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie4.js",["337","338","339","340","341"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst EditMovie4 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [allValues, setAllValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n  const { movie_id } = useParams();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // check type,name,designation,season is not empty\n    if (values.name === '' && values.type === '') {\n      swal('Error', 'Please Fill all Fields', 'error');\n      return;\n    }\n\n    setAllValues([...allValues, values]);\n    setValues({\n      ...values,\n      type: '',\n      name: '',\n      designation: '',\n      season: '',\n    });\n    // reset the form using document.querySelector\n    document.querySelector('form').reset();\n  };\n  const saveHandler = async (e) => {\n    // check all values length\n    if (allValues.length > 0) {\n      // // axios\n      setSubmitting(true);\n      try {\n        let res = await axios.patch(\n          `${API_URL}movie/other/${movie_id}`,\n          allValues,\n          header\n        );\n        swal('Success', 'Details added successfully', 'success');\n        history.push(`/movie-view`);\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    } else {\n      swal('Error', 'Please add some details', 'error');\n      return;\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      let res = await axios.get(`${API_URL}movie/${movie_id}`, header);\n      setAllValues(res.data.other);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Movie'\n        pageContent='Edit Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Other Details</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table table-responsive'>\n                <table className='table'>\n                  <tr>\n                    <td>Type</td>\n                    <td>Name</td>\n                    <td>Designation</td>\n                    <td>Season</td>\n                    <td>Action</td>\n                  </tr>\n                  {allValues.map((item, index) => (\n                    <tr key={index}>\n                      <td>\n                        {item.type === '1'\n                          ? 'Producer'\n                          : item.type === '2'\n                          ? 'Music'\n                          : item.type === '3'\n                          ? 'Cinemotography'\n                          : item.type === '4'\n                          ? 'Flim Edit'\n                          : item.type === '5'\n                          ? 'Art Direction'\n                          : ''}\n                      </td>\n                      <td>\n                        {item.name} {item.type}\n                      </td>\n                      <td>{item.designation}</td>\n                      <td>{item.season}</td>\n                      <td>\n                        <button\n                          className='btn btn-danger'\n                          style={{ background: '#ff0000' }}\n                          onClick={() =>\n                            setAllValues(allValues.filter((i) => i !== item))\n                          }>\n                          <span className='fa fa-trash'></span>\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Type</label>\n                    <select\n                      name='type'\n                      className='form-control'\n                      id=''\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value=''>-----</option>\n                      <option value='1'>Producer</option>\n                      <option value='2'>Music</option>\n                      <option value='3'>Cinemotography</option>\n                      <option value='4'>Film Edit</option>\n                      <option value='5'>Art Direction</option>\n                    </select>\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Designation</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Designation'\n                      name='designation'\n                      required\n                      value={values.designation}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Season</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Season'\n                      name='season'\n                      value={values.season}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div\n                    className='form-col-md-12 mt-3 d-flex '\n                    style={{ justifyContent: 'space-between' }}>\n                    <button type='submit' className='btn btn-primary'>\n                      Add\n                    </button>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button\n                        className='btn btn-dark'\n                        type='button'\n                        onClick={() => saveHandler()}>\n                        Submit\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie4;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie2.js",["342","343","344","345","346","347"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst EditMovie2 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isCastOpen, setIsCastOpen] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [casts, setCasts] = useState([]);\n  const [allCasts, setAllCasts] = useState([]);\n  const { movie_id } = useParams();\n  const [submitting, setSubmitting] = useState(false);\n  const [fullCastList, setFullcastList] = useState([]);\n  const [castSearch, setCastSearch] = useState('');\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.cast_id);\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n    data.append('type', values.type);\n    if (values.type === '2') {\n      if (values.cast_id === '') {\n        swal('Oops !', 'Please select cast', 'error');\n        return;\n      }\n    }\n    data.append('exist_id', values.cast_id);\n    data.append('image', file);\n    data.append('character', values.character);\n    if (values.session) {\n      data.append('season', values.season);\n    }\n    // // add a image to data\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/seriescast/${movie_id}`,\n        data,\n        header\n      );\n      setCasts(res.data.seriescast);\n\n      setValues({\n        ...values,\n        type: '1',\n        cast_id: '',\n        name: '',\n        type: '',\n        character: '',\n        season: '',\n      });\n      setFile('');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const castDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(\n          `${API_URL}movie/seriescast/${movie_id}/${id}`,\n          header\n        );\n        const newCasts = casts.filter((cast) => cast._id !== id);\n        setCasts(newCasts);\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchCasts();\n    fetchAllCasts();\n    setValues({\n      ...values,\n      type: '1',\n    });\n  }, []);\n  const fetchCasts = async () => {\n    try {\n      const res = await axios.get(\n        `${API_URL}movie/seriescast/${movie_id}`,\n        header\n      );\n      setCasts(res.data.seriescast);\n      setIsLoaded(true);\n      console.log(casts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchAllCasts = async () => {\n    try {\n      const res = await axios.get(`${API_URL}cast`, header);\n      setAllCasts(res.data);\n      setFullcastList(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const PickCast = (id, image, name) => {\n    console.log(id);\n    setValues({\n      ...values,\n      cast_id: id,\n      image: image,\n      name: name,\n    });\n    setIsCastOpen(false);\n  };\n\n  const nextPage = () => {\n    history.push(`/movie-edit/3/${movie_id}`);\n  };\n\n  const handleCastSearch = (e) => {\n    setCastSearch(e.target.value);\n    // filter the cast\n    const filteredCasts = fullCastList.filter((cast) => {\n      return cast.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setAllCasts(filteredCasts);\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Movie'\n        pageContent='Edit Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Series Cast</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Name</th>\n                          <th>Avatar</th>\n                          <th>Character Name</th>\n                          <th>Season</th>\n                          <th>Action</th>\n                        </tr>\n                        {casts.map((cast, index) => (\n                          <tr key={index}>\n                            <td>{cast.cast.name}</td>\n                            <td>\n                              {cast.cast.image ? (\n                                <img\n                                  src={cast.cast.image}\n                                  alt=''\n                                  className='img img-rounded'\n                                  style={{\n                                    width: '50px',\n                                    height: '50px',\n                                    borderRadius: '50%',\n                                  }}\n                                />\n                              ) : (\n                                ''\n                              )}\n                            </td>\n                            <td>\n                              {cast.character != '' &&\n                              cast.character != undefined &&\n                              cast.character != 'undefined'\n                                ? cast.character\n                                : ''}\n                            </td>\n                            <td>{cast.season}</td>\n                            <td>\n                              <button\n                                className='btn btn-primary'\n                                style={{ backgroundColor: '#ff0000' }}\n                                onClick={() => castDelete(cast._id)}>\n                                <span className='fa fa-trash'></span>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <select\n                        name='type'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'>\n                        <option value='1' selected>\n                          New Cast\n                        </option>\n                        <option value='2'>Existing Cast</option>\n                      </select>\n                    </div>\n                    {values.type === '1' ? (\n                      <>\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>Name</label>\n                          <input\n                            type='text'\n                            className='form-control input-default '\n                            placeholder='Name'\n                            name='name'\n                            required\n                            value={values.name}\n                            onChange={(e) => handleChange(e)}\n                          />\n                        </div>\n\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>\n                            Image\n                            <small className='p-3'>\n                              Recommended Size (WxH) : {ImageSize.seriesCast}\n                            </small>\n                          </label>\n                          <div className='from-file'>\n                            <input\n                              type='file'\n                              className='form-file-input form-control'\n                              placeholder='Thumbnail'\n                              name='thumbnail'\n                              accept='image/*'\n                              onChange={(e) => handleFile(e, 'thumbnail')}\n                            />\n                          </div>\n                        </div>\n                      </>\n                    ) : (\n                      <div className='form-group col-md-6 mb-3'>\n                        <label htmlFor=''>Select One</label>\n                        <div className='custom-dropdown-container form-control'>\n                          <div\n                            className='custom-dropdown-header'\n                            onClick={() => setIsCastOpen(!isCastOpen)}>\n                            {isCastOpen ? (\n                              'Select One'\n                            ) : (\n                              <>\n                                {values.name ? (\n                                  <div className='cast-holder'>\n                                    <img src={values.image} alt='' />\n                                    <h3>{values.name}</h3>\n                                  </div>\n                                ) : (\n                                  'Select One'\n                                )}\n                              </>\n                            )}\n                          </div>\n                          {isCastOpen && (\n                            <div className='custom-dropdown-list-container'>\n                              <input\n                                type='text'\n                                value={castSearch}\n                                onChange={(e) => handleCastSearch(e)}\n                                className='cast-search'\n                              />\n                              {allCasts.map((cast, index) => (\n                                <div\n                                  className='custom-dropdown-list'\n                                  key={index}\n                                  onClick={() =>\n                                    PickCast(cast._id, cast.image, cast.name)\n                                  }>\n                                  <div className='cast-holder'>\n                                    <img src={cast?.image} alt='' />\n                                    <h3>{cast?.name}</h3>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Character Name</label>\n                      <input\n                        type='text'\n                        name='character'\n                        onChange={(e) => handleChange(e)}\n                        // required\n                        className='form-control'\n                      />\n                    </div>\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Season</label>\n                      <input\n                        type='text'\n                        name='season'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'\n                      />\n                    </div>\n\n                    <div\n                      className='form-group col-md-5 mt-3 d-flex '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Add Cast\n                        </button>\n                      )}\n                    </div>\n                    <div className='row'>\n                      <div className='col-sm-5 mt-2 text-left'>\n                        <button\n                          type='button'\n                          onClick={() => nextPage()}\n                          className='btn btn-dark'>\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie2;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie1.js",["348","349"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst EditMovie1 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isCastOpen, setIsCastOpen] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [casts, setCasts] = useState([]);\n  const [allCasts, setAllCasts] = useState([]);\n  const { movie_id } = useParams();\n  const [submitting, setSubmitting] = useState(false);\n  const [fullCastList, setFullcastList] = useState([]);\n  const [castSearch, setCastSearch] = useState('');\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.cast_id);\n    setSubmitting(true);\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n    data.append('type', values.type);\n    data.append('exist_id', values.cast_id);\n    data.append('image', file);\n    // // add a image to data\n    if (values.type === '2') {\n      if (values.cast_id === '') {\n        swal('Oops !', 'Please select cast', 'error');\n        return;\n      }\n    }\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/starcast/${movie_id}`,\n        data,\n        header\n      );\n      setCasts(res.data.starcast);\n\n      setValues({ ...values, cast_id: '', name: '', type: '' });\n      setFile('');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const castDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(\n          `${API_URL}movie/starcast/${movie_id}/${id}`,\n          header\n        );\n        const newCasts = casts.filter((cast) => cast._id !== id);\n        setCasts(newCasts);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchCasts();\n    fetchAllCasts();\n    setValues({\n      ...values,\n      type: '1',\n    });\n  }, []);\n  const fetchCasts = async () => {\n    try {\n      const res = await axios.get(\n        `${API_URL}movie/starcast/${movie_id}`,\n        header\n      );\n      setCasts(res.data.starcast);\n      setIsLoaded(true);\n      console.log(casts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchAllCasts = async () => {\n    try {\n      const res = await axios.get(`${API_URL}cast`, header);\n      setAllCasts(res.data);\n      setFullcastList(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const PickCast = (id, image, name) => {\n    console.log(id);\n    setValues({\n      ...values,\n      cast_id: id,\n      image: image,\n      name: name,\n    });\n    setIsCastOpen(false);\n  };\n\n  const nextPage = () => {\n    history.push(`/movie-edit/2/${movie_id}`);\n  };\n\n  const handleCastSearch = (e) => {\n    setCastSearch(e.target.value);\n    // filter the cast\n    const filteredCasts = fullCastList.filter((cast) => {\n      return cast.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setAllCasts(filteredCasts);\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Movie'\n        pageContent='Edit Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit StarCast</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Name</th>\n                          <th>Avatar</th>\n                          <th>Action</th>\n                        </tr>\n                        {casts.map((cast, index) => (\n                          <tr key={index}>\n                            <td>{cast.cast.name}</td>\n                            <td>\n                              <img\n                                src={cast.cast.image}\n                                alt=''\n                                className='img img-rounded'\n                                style={{\n                                  width: '50px',\n                                  height: '50px',\n                                  borderRadius: '50%',\n                                }}\n                              />\n                            </td>\n                            <td>\n                              <button\n                                className='btn btn-primary'\n                                style={{ backgroundColor: '#ff0000' }}\n                                onClick={() => castDelete(cast._id)}>\n                                <span className='fa fa-trash'></span>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-6 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <select\n                        name='type'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'>\n                        <option value='1' selected>\n                          New Cast\n                        </option>\n                        <option value='2'>Existing Cast</option>\n                      </select>\n                    </div>\n                    {values.type === '1' ? (\n                      <>\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>Name</label>\n                          <input\n                            type='text'\n                            className='form-control input-default '\n                            placeholder='Name'\n                            name='name'\n                            required\n                            value={values.name}\n                            onChange={(e) => handleChange(e)}\n                          />\n                        </div>\n\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>\n                            Image\n                            <small className='p-3'>\n                              Recommended Size (WxH) : {ImageSize.starCast}\n                            </small>\n                          </label>\n                          <div className='from-file'>\n                            <input\n                              type='file'\n                              className='form-file-input form-control'\n                              placeholder='Thumbnail'\n                              name='thumbnail'\n                              accept='image/*'\n                              onChange={(e) => handleFile(e, 'thumbnail')}\n                            />\n                          </div>\n                        </div>\n                      </>\n                    ) : (\n                      <div className='form-group col-md-6 mb-3'>\n                        <label htmlFor=''>Select One</label>\n                        <div className='custom-dropdown-container form-control'>\n                          <div\n                            className='custom-dropdown-header'\n                            onClick={() => setIsCastOpen(!isCastOpen)}>\n                            {isCastOpen ? (\n                              'Select One'\n                            ) : (\n                              <>\n                                {values.name ? (\n                                  <div className='cast-holder'>\n                                    <img src={values.image} alt='' />\n                                    <h3>{values.name}</h3>\n                                  </div>\n                                ) : (\n                                  'Select One'\n                                )}\n                              </>\n                            )}\n                          </div>\n                          {isCastOpen && (\n                            <div className='custom-dropdown-list-container'>\n                              <input\n                                type='text'\n                                value={castSearch}\n                                onChange={(e) => handleCastSearch(e)}\n                                className='cast-search'\n                              />\n                              {allCasts.map((cast, index) => (\n                                <div\n                                  className='custom-dropdown-list'\n                                  key={index}\n                                  onClick={() =>\n                                    PickCast(cast._id, cast.image, cast.name)\n                                  }>\n                                  <div className='cast-holder'>\n                                    <img src={cast?.image} alt='' />\n                                    <h3>{cast?.name}</h3>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    <div\n                      className='form-group col-md-4 '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Add Cast\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  <div className='row'>\n                    <div className='col-sm-4 text-left'>\n                      <button\n                        type='button'\n                        onClick={() => nextPage()}\n                        className='btn btn-dark mt-2'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie1;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\ViewMovieDetail.js",["350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useState, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\n/// Image\nimport profile01 from '../../../images/profile/1.jpg';\nimport profile02 from '../../../images/profile/2.jpg';\nimport profile03 from '../../../images/profile/3.jpg';\nimport profile04 from '../../../images/profile/4.jpg';\nimport profile05 from '../../../images/profile/5.jpg';\nimport profile06 from '../../../images/profile/6.jpg';\nimport profile07 from '../../../images/profile/7.jpg';\nimport profile08 from '../../../images/profile/8.jpg';\nimport profile from '../../../images/profile/profile.png';\nimport { Dropdown, Button, Modal } from 'react-bootstrap';\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport { move } from 'formik';\n\nconst ViewMovieDetail = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const [movieProductions, setMovieProductions] = useState();\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchMovie();\n  }, []);\n\n  const fetchMovie = async () => {\n    const response = await axios.get(`${API_URL}movie/${id}`, header);\n    setMovie(response.data);\n    setIsLoaded(true);\n\n    // set productions\n    if (response.data?.production.length > 0) {\n      let length = response.data?.production.length;\n      // get a last index values of production and store it to movieProductions\n      let lastIndex = response.data?.production[length - 1];\n      setMovieProductions(lastIndex);\n    } else {\n      setMovieProductions(response.data.production);\n    }\n  };\n\n  const [sendMessage, setSendMessage] = useState(false);\n\n  const options = {\n    settings: {\n      overlayColor: '#000000',\n    },\n  };\n\n  return (\n    <>\n      <div>\n        <div>\n          <PageTitle\n            activeMenu='Movie Detail'\n            motherMenu='Movies'\n            pageContent='Movie Detail'\n          />\n          {isLoaded ? (\n            <>\n              <div className='row'>\n                <div className='col-lg-12'>\n                  <div className='profile card card-body px-3 pt-3 pb-0'>\n                    <div className='profile-head'>\n                      <div className='photo-content '>\n                        <div\n                          className='cover-photo rounded'\n                          style={{\n                            backgroundImage: `url(${movie.banner})`,\n                          }}></div>\n                      </div>\n                      <div className='profile-info'>\n                        <div className='profile-photo'>\n                          <img\n                            src={movie.image}\n                            style={{ width: '88px', height: '88px' }}\n                            className='img-fluid rounded-circle'\n                            alt='profile'\n                          />\n                        </div>\n                        <div className='profile-details'>\n                          <div className='profile-name px-3 pt-2'>\n                            <h4 className='text-primary mb-0'>\n                              {movie?.title}\n                            </h4>\n                            <p>{movie?.genre}</p>\n                          </div>\n                          <div className='profile-email px-2 pt-2'>\n                            <h4 className='text-muted mb-0'>\n                              ({movie.category?.title})\n                            </h4>\n                            <p>Duration : {movieProductions?.run_time}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='row'>\n                <div className='col-xl-12'>\n                  <div className='row'>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary'>\n                            Trailer &amp; Synopsis\n                          </h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-blog '>\n                            <iframe\n                              width='560'\n                              height='315'\n                              src={movie.trailer}\n                              title='YouTube video player'\n                              frameborder='0'\n                              className='img-fluid  mb-4 w-100'\n                              allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n                              allowfullscreen></iframe>\n\n                            <p className='mb-0'>{movie.synopsis}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary '>Gallery</h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-interest '>\n                            <SRLWrapper options={options}>\n                              <div className='row sp4'>\n                                {movie.gallery?.map((gal, index) => (\n                                  <div className='col-lg-4 col-xl-4 col-sm-4 col-6 int-col mb-1'>\n                                    <a href={gal.url}>\n                                      <img\n                                        src={gal.url}\n                                        alt='Gallery'\n                                        className='img-fluid'\n                                      />{' '}\n                                    </a>\n                                  </div>\n                                ))}\n                              </div>\n                            </SRLWrapper>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary'>StarCast</h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-news'>\n                            <div className='row'>\n                              {movie.starcast?.map((cast, index) => (\n                                <div\n                                  className='media pt-3 pb-3 col-sm-6'\n                                  key={index}\n                                  style={{ alignItems: 'center' }}>\n                                  <img\n                                    src={cast?.cast?.image}\n                                    alt=''\n                                    className='me-3 rounded'\n                                    style={{ width: '75px', height: '75px' }}\n                                  />\n                                  <div className='media-body'>\n                                    <h5 className='m-b-5'>\n                                      {cast?.cast?.name}\n                                    </h5>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary'>Series Cast</h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-news'>\n                            <div className='row'>\n                              {movie.seriescast?.map((cast, index) => (\n                                <div\n                                  className='media  col-sm-4'\n                                  key={index}\n                                  style={{\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    textAlign: 'center',\n                                  }}>\n                                  <img\n                                    src={cast?.cast?.image}\n                                    alt=''\n                                    className='rounded'\n                                    style={{ width: '75px', height: '75px' }}\n                                  />\n                                  <div className='media-body'>\n                                    <h5\n                                      style={{\n                                        marginBottom: 0,\n                                        marginTop: 10,\n                                      }}>\n                                      {cast?.cast?.name}\n                                    </h5>\n                                    <p>{cast?.character}</p>\n                                    <small>{cast?.season}</small>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary'>Production Details</h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-news'>\n                            <div className='row'>\n                              <div className='table-responsive'>\n                                <table className='table table-bordered'>\n                                  <tr>\n                                    <th>Directed By</th>\n                                    <td>{movieProductions?.directed_by}</td>\n                                  </tr>\n                                  <tr>\n                                    <th>Written By</th>\n                                    <td>{movieProductions?.written_by}</td>\n                                  </tr>\n                                  <tr>\n                                    <th>Release Date</th>\n                                    <td>{movieProductions?.release_date}</td>\n                                  </tr>\n                                  <tr>\n                                    <th>Language</th>\n                                    <td>{movieProductions?.language}</td>\n                                  </tr>\n                                  <tr>\n                                    <th>Origin</th>\n                                    <td>\n                                      {movieProductions?.country_of_origin}\n                                    </td>\n                                  </tr>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-lg-4'>\n                      <div className='card'>\n                        <div className='card-header border-0 pb-0'>\n                          <h5 className='text-primary'>Other Infos</h5>\n                        </div>\n                        <div className='card-body pt-3'>\n                          <div className='profile-news'>\n                            <div className='row'>\n                              <div className='table-responsive'>\n                                <table className='table table-bordered'>\n                                  <tr>\n                                    <th>Type</th>\n                                    <th>Name</th>\n                                    <th>Designation</th>\n                                    <th>Season</th>\n                                  </tr>\n                                  {movie.other?.map((ot, index) => (\n                                    <tr key={index}>\n                                      <td>\n                                        {ot.type === '1'\n                                          ? 'Producer'\n                                          : ot.type === '2'\n                                          ? 'Music'\n                                          : ot.type === '3'\n                                          ? 'Cinemotography'\n                                          : ot.type === '4'\n                                          ? 'Flim Edit'\n                                          : 'Art Direction'}\n                                      </td>\n                                      <td>{ot?.name}</td>\n                                      <td>{ot?.designation}</td>\n                                      <td>{ot?.season}</td>\n                                    </tr>\n                                  ))}\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className='row'>\n              <div className='col-12'>\n                <div className='card'>\n                  <div className='card-body'>\n                    <Loading />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewMovieDetail;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie4.js",["370","371","372","373","374"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst AddMovie4 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [allValues, setAllValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const { movie_id } = useParams();\n  const [submitting, setSubmitting] = useState(false);\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (values.name === '' && values.type === '') {\n      swal('Error', 'Please Fill all Fields', 'error');\n      return;\n    }\n    setAllValues([...allValues, values]);\n    setValues({\n      ...values,\n      type: '',\n      name: '',\n      designation: '',\n      season: '',\n    });\n    document.querySelector('form').reset();\n  };\n  const saveHandler = async (e) => {\n    // check all values length\n    // if (allValues.length > 0) {\n      // // axios\n      setSubmitting(true);\n      try {\n        let res = await axios.post(\n          `${API_URL}movie/other/${movie_id}`,\n          allValues,\n          header\n        );\n        swal('Success', 'Details added successfully', 'success');\n        history.push(`/movie-view`);\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    // } else {\n    //   swal('Error', 'Please add some details', 'error');\n    //   return;\n    // }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Movie' pageContent='Add Movie' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Other Details</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table table-responsive'>\n                <table className='table'>\n                  <tr>\n                    <td>Type</td>\n                    <td>Name</td>\n                    <td>Designation</td>\n                    <td>Season</td>\n                    <td>Action</td>\n                  </tr>\n                  {allValues.map((item, index) => (\n                    <tr key={index}>\n                      <td>\n                        {item.type === '1'\n                          ? 'Producer'\n                          : item.type === '2'\n                          ? 'Music'\n                          : item.type === '3'\n                          ? 'Cinemotography'\n                          : item.type === '4'\n                          ? 'Film Edit'\n                          : item.type === '5'\n                          ? 'Art Direction'\n                          : ''}\n                      </td>\n                      <td>{item.name}</td>\n                      <td>{item.designation}</td>\n                      <td>{item.season}</td>\n                      <td>\n                        <button\n                          className='btn btn-danger'\n                          style={{ background: '#ff0000' }}\n                          onClick={() =>\n                            setAllValues(allValues.filter((i) => i !== item))\n                          }>\n                          <span className='fa fa-trash'></span>\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Type</label>\n                    <select\n                      name='type'\n                      className='form-control'\n                      id=''\n                      required={false}\n                      onChange={(e) => handleChange(e)}>\n                      <option value=''>------</option>\n                      <option value='1'>Producer</option>\n                      <option value='2'>Music</option>\n                      <option value='3'>Cinemotography</option>\n                      <option value='4'>Film Edit</option>\n                      <option value='5'>Art Direction</option>\n                    </select>\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required={false}\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Designation</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Designation'\n                      name='designation'\n                      required={false}\n                      value={values.designation}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-3 mb-3'>\n                    <label htmlFor=''>Season</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Season'\n                      name='season'\n                      value={values.season}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div\n                    className='form-col-md-12 mt-3 d-flex '\n                    style={{ justifyContent: 'space-between' }}>\n                    <button type='submit' className='btn btn-primary'>\n                      Add\n                    </button>\n\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button\n                        className='btn btn-primary'\n                        type='button'\n                        onClick={() => saveHandler()}>\n                        Submit\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMovie4;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie2.js",["375","376","377","378","379","380"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst AddMovie2 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isCastOpen, setIsCastOpen] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [casts, setCasts] = useState([]);\n  const [allCasts, setAllCasts] = useState([]);\n  const [fullCastList, setFullcastList] = useState([]);\n  const { movie_id } = useParams();\n  const [submitting, setSubmitting] = useState(false);\n  const [castSearch, setCastSearch] = useState('');\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.cast_id);\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n    data.append('type', values.type);\n    if (values.type === '2') {\n      if (values.cast_id === '') {\n        swal('Oops !', 'Please select cast', 'error');\n        return;\n      }\n    }\n    data.append('exist_id', values.cast_id);\n    data.append('image', file);\n    data.append('character', values.character);\n    if (values.session) {\n      data.append('season', values.season);\n    }\n    // // add a image to data\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/seriescast/${movie_id}`,\n        data,\n        header\n      );\n      setCasts(res.data.seriescast);\n\n      setValues({\n        type: '1',\n        cast_id: '',\n        name: '',\n        type: '',\n        character: '',\n        season: '',\n      });\n      setFile('');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const castDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(\n          `${API_URL}movie/seriescast/${movie_id}/${id}`,\n          header\n        );\n        const newCasts = casts.filter((cast) => cast._id !== id);\n        setCasts(newCasts);\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchCasts();\n    fetchAllCasts();\n    setValues({\n      ...values,\n      type: '1',\n    });\n  }, []);\n  const fetchCasts = async () => {\n    try {\n      const res = await axios.get(\n        `${API_URL}movie/seriescast/${movie_id}`,\n        header\n      );\n      setCasts(res.data.seriescast);\n      setIsLoaded(true);\n      console.log(casts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchAllCasts = async () => {\n    try {\n      const res = await axios.get(`${API_URL}cast`, header);\n      setAllCasts(res.data);\n      setFullcastList(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const PickCast = (id, image, name) => {\n    console.log(id);\n    setValues({\n      ...values,\n      cast_id: id,\n      image: image,\n      name: name,\n    });\n    setIsCastOpen(false);\n  };\n\n  const nextPage = () => {\n    history.push(`/movie-add/3/${movie_id}`);\n  };\n\n  const handleCastSearch = (e) => {\n    setCastSearch(e.target.value);\n    // filter the cast\n    const filteredCasts = fullCastList.filter((cast) => {\n      return cast.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setAllCasts(filteredCasts);\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Movie' pageContent='Add Movie' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Series Cast</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Name</th>\n                          <th>Avatar</th>\n                          <th>Character Name</th>\n                          <th>Season</th>\n                          <th>Action</th>\n                        </tr>\n                        {casts.map((cast, index) => (\n                          <tr key={index}>\n                            <td>{cast.cast.name}</td>\n                            <td>\n                              {cast.cast.image ? (\n                                <img\n                                  src={cast.cast.image}\n                                  alt=''\n                                  className='img img-rounded'\n                                  style={{\n                                    width: '50px',\n                                    height: '50px',\n                                    borderRadius: '50%',\n                                  }}\n                                />\n                              ) : (\n                                ''\n                              )}\n                            </td>\n                            <td>\n                              {cast.character != '' &&\n                              cast.character != undefined &&\n                              cast.character != 'undefined'\n                                ? cast.character\n                                : ''}\n                            </td>\n                            <td>{cast.season}</td>\n                            <td>\n                              <button\n                                className='btn btn-primary'\n                                style={{ backgroundColor: '#ff0000' }}\n                                onClick={() => castDelete(cast._id)}>\n                                <span className='fa fa-trash'></span>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <select\n                        name='type'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'>\n                        <option value='1'>New Cast</option>\n                        <option value='2'>Existing Cast</option>\n                      </select>\n                    </div>\n                    {values.type === '1' ? (\n                      <>\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>Name</label>\n                          <input\n                            type='text'\n                            className='form-control input-default '\n                            placeholder='Name'\n                            name='name'\n                            required\n                            value={values.name}\n                            onChange={(e) => handleChange(e)}\n                          />\n                        </div>\n\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>\n                            Image\n                            <small className='d-inline-block m-3'>\n                              Recommended Size (WxH) : {ImageSize.seriesCast}\n                            </small>\n                          </label>\n                          <div className='from-file'>\n                            <input\n                              type='file'\n                              className='form-file-input form-control'\n                              placeholder='Thumbnail'\n                              name='thumbnail'\n                              accept='image/*'\n                              onChange={(e) => handleFile(e, 'thumbnail')}\n                            />\n                          </div>\n                        </div>\n                      </>\n                    ) : (\n                      <div className='form-group col-md-3 mb-3'>\n                        <label htmlFor=''>Select One</label>\n                        <div className='custom-dropdown-container form-control'>\n                          <div\n                            className='custom-dropdown-header'\n                            onClick={() => setIsCastOpen(!isCastOpen)}>\n                            {isCastOpen ? (\n                              'Select One'\n                            ) : (\n                              <>\n                                {values.name ? (\n                                  <div className='cast-holder'>\n                                    <img src={values.image} alt='' />\n                                    <h3>{values.name}</h3>\n                                  </div>\n                                ) : (\n                                  'Select One'\n                                )}\n                              </>\n                            )}\n                          </div>\n                          {isCastOpen && (\n                            <div className='custom-dropdown-list-container'>\n                              <input\n                                type='text'\n                                value={castSearch}\n                                onChange={(e) => handleCastSearch(e)}\n                                className='cast-search'\n                              />\n                              {allCasts.map((cast, index) => (\n                                <div\n                                  className='custom-dropdown-list'\n                                  key={index}\n                                  onClick={() =>\n                                    PickCast(cast._id, cast.image, cast.name)\n                                  }>\n                                  <div className='cast-holder'>\n                                    <img src={cast?.image} alt='' />\n                                    <h3>{cast?.name}</h3>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Character Name</label>\n                      <input\n                        type='text'\n                        name='character'\n                        onChange={(e) => handleChange(e)}\n                        // required\n                        className='form-control'\n                      />\n                    </div>\n                    <div className='form-group col-md-4 mb-3'>\n                      <label htmlFor=''>Season</label>\n                      <input\n                        type='text'\n                        name='season'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'\n                      />\n                    </div>\n\n                    <div\n                      className='form-col-md-12 mt-3 d-flex '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Add Cast\n                        </button>\n                      )}\n                      <button\n                        type='button'\n                        onClick={() => nextPage()}\n                        className='btn btn-dark'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMovie2;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie3.js",["381","382","383","384","385"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst AddMovie3 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n  const { movie_id } = useParams();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/production/${movie_id}`,\n        values,\n        header\n      );\n      swal('Success', 'Production added successfully', 'success');\n\n      history.push(`/movie-add/4/${movie_id}`);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Movie' pageContent='Add Movie' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Production Details</h4>\n            </div>\n\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Directed By</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Directed By'\n                      name='directed_by'\n                      required={false}\n                      value={values.directed_by}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Written By</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Written By'\n                      name='written_by'\n                      required={false}\n                      value={values.written_by}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                \n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Country of Origin</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Country of Origin'\n                      name='country_of_origin'\n                      required={false}\n                      value={values.country_of_origin}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Language</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Language'\n                      name='language'\n                      required={false}\n                      value={values.language}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Run Time</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Run Time'\n                      name='run_time'\n                      required={false}\n                      value={values.run_time}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div\n                    className='form-col-md-12 mt-3 d-flex '\n                    style={{ justifyContent: 'space-between' }}>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Save\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMovie3;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie1.js",["386","387"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport Loading from '../../components/Loading/Loading';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\nimport './dropdown.style.css';\n\nconst AddMovie1 = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isCastOpen, setIsCastOpen] = useState(false);\n  const [file, setFile] = useState('');\n  const history = useHistory();\n  const [casts, setCasts] = useState([]);\n  const [allCasts, setAllCasts] = useState([]);\n  const [fullCastList, setFullcastList] = useState([]);\n  const { movie_id } = useParams();\n  const [submitting, setSubmitting] = useState(false);\n  const [castSearch, setCastSearch] = useState('');\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.cast_id);\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n    data.append('type', values.type);\n    data.append('exist_id', values.cast_id);\n    data.append('image', file);\n    // // add a image to data\n    if (values.type === '2') {\n      if (values.cast_id === '') {\n        swal('Oops !', 'Please select cast', 'error');\n        return;\n      }\n    }\n\n    // axios\n    try {\n      let res = await axios.post(\n        `${API_URL}movie/starcast/${movie_id}`,\n        data,\n        header\n      );\n      setCasts(res.data.starcast);\n\n      setValues({ ...values, cast_id: '', name: '', type: '1' });\n      setFile('');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const castDelete = async (id) => {\n    // prompt for confirming delete\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n\n    if (result) {\n      try {\n        const res = await axios.delete(\n          `${API_URL}movie/starcast/${movie_id}/${id}`,\n          header\n        );\n        const newCasts = casts.filter((cast) => cast._id !== id);\n        setCasts(newCasts);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchCasts();\n    fetchAllCasts();\n    setValues({\n      ...values,\n      type: '1',\n    });\n  }, []);\n  const fetchCasts = async () => {\n    try {\n      const res = await axios.get(\n        `${API_URL}movie/starcast/${movie_id}`,\n        header\n      );\n      setCasts(res.data.starcast);\n      setIsLoaded(true);\n      console.log(casts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchAllCasts = async () => {\n    try {\n      const res = await axios.get(`${API_URL}cast`, header);\n      setAllCasts(res.data);\n      setFullcastList(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const PickCast = (id, image, name) => {\n    console.log(id);\n    setValues({\n      ...values,\n      cast_id: id,\n      image: image,\n      name: name,\n    });\n    setIsCastOpen(false);\n  };\n\n  const nextPage = () => {\n    history.push(`/movie-add/2/${movie_id}`);\n  };\n\n  const handleCastSearch = (e) => {\n    setCastSearch(e.target.value);\n    // filter the cast\n    const filteredCasts = fullCastList.filter((cast) => {\n      return cast.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setAllCasts(filteredCasts);\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Movie' pageContent='Add Movie' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add StarCast</h4>\n            </div>\n            {isLoaded ? (\n              <div className='card-body'>\n                <div className='row'>\n                  <div className='col-sm-12'>\n                    <div className='table responsive'>\n                      <table className='table'>\n                        <tr>\n                          <th>Name</th>\n                          <th>Avatar</th>\n                          <th>Action</th>\n                        </tr>\n                        {casts.map((cast, index) => (\n                          <tr key={index}>\n                            <td>{cast.cast.name}</td>\n                            <td>\n                              <img\n                                src={cast.cast.image}\n                                alt=''\n                                className='img img-rounded'\n                                style={{\n                                  width: '50px',\n                                  height: '50px',\n                                  borderRadius: '50%',\n                                }}\n                              />\n                            </td>\n                            <td>\n                              <button\n                                className='btn btn-primary'\n                                style={{ backgroundColor: '#ff0000' }}\n                                onClick={() => castDelete(cast._id)}>\n                                <span className='fa fa-trash'></span>\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <form\n                  onSubmit={(e) => handleSubmit(e)}\n                  encType='multipart/form-data'>\n                  <div className='row'>\n                    <div className='form-group col-md-6 mb-3'>\n                      <label htmlFor=''>Type</label>\n                      <select\n                        name='type'\n                        onChange={(e) => handleChange(e)}\n                        className='form-control'>\n                        <option value='1'>New Cast</option>\n                        <option value='2'>Existing Cast</option>\n                      </select>\n                    </div>\n                    {values.type === '1' ? (\n                      <>\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>Name</label>\n                          <input\n                            type='text'\n                            className='form-control input-default '\n                            placeholder='Name'\n                            name='name'\n                            required\n                            value={values.name}\n                            onChange={(e) => handleChange(e)}\n                          />\n                        </div>\n\n                        <div className='form-group col-md-3 mb-3'>\n                          <label htmlFor=''>\n                            Image\n                            <small className='d-inline-block m-3'>\n                              Recommended Size (WxH) : {ImageSize.starCast}\n                            </small>\n                          </label>\n                          <div className='from-file'>\n                            <input\n                              type='file'\n                              className='form-file-input form-control'\n                              placeholder='Thumbnail'\n                              name='thumbnail'\n                              accept='image/*'\n                              onChange={(e) => handleFile(e, 'thumbnail')}\n                            />\n                          </div>\n                        </div>\n                      </>\n                    ) : (\n                      <div className='form-group col-md-6 mb-3'>\n                        <label htmlFor=''>Select One</label>\n                        <div className='custom-dropdown-container form-control'>\n                          <div\n                            className='custom-dropdown-header'\n                            onClick={() => setIsCastOpen(!isCastOpen)}>\n                            {isCastOpen ? (\n                              'Select One'\n                            ) : (\n                              <>\n                                {values.name ? (\n                                  <div className='cast-holder'>\n                                    <img src={values.image} alt='' />\n                                    <h3>{values.name}</h3>\n                                  </div>\n                                ) : (\n                                  'Select One'\n                                )}\n                              </>\n                            )}\n                          </div>\n                          {isCastOpen && (\n                            <div className='custom-dropdown-list-container'>\n                              <input\n                                type='text'\n                                value={castSearch}\n                                onChange={(e) => handleCastSearch(e)}\n                                className='cast-search'\n                              />\n                              {allCasts.map((cast, index) => (\n                                <div\n                                  className='custom-dropdown-list'\n                                  key={index}\n                                  onClick={() =>\n                                    PickCast(cast._id, cast.image, cast.name)\n                                  }>\n                                  <div className='cast-holder'>\n                                    <img src={cast?.image} alt='' />\n                                    <h3>{cast?.name}</h3>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                    <div\n                      className='form-group col-md-4 '\n                      style={{ justifyContent: 'space-between' }}>\n                      {submitting ? (\n                        <LoadingButton />\n                      ) : (\n                        <button type='submit' className='btn btn-primary'>\n                          Add Cast\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                  <div className='row'>\n                    <div className='col-sm-4 text-left'>\n                      <button\n                        type='button'\n                        onClick={() => nextPage()}\n                        className='btn btn-dark mt-2'>\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMovie1;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\EditMovie.js",["388","389","390","391","392","393","394","395","396","397","398"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport moment from 'moment';\nimport PageTitle from '../../layouts/PageTitle';\nimport './EditMovie.styled.css';\n\nconst EditMovie = () => {\n  const initialValues = [];\n  const initialCategories = [];\n  const { id } = useParams();\n  const [values, setValues] = useState(initialValues);\n  const [thumbnail, setThumbnail] = useState('');\n  const [banner, setBanner] = useState('');\n  const [gallery, setGallery] = useState();\n  const [submitting, setSubmitting] = useState(false);\n  const [existingGallery, setExistingGallery] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [categories, setCategories] = useState(initialCategories);\n  const [currentCat, setCurrentCat] = useState({\n    id: '',\n    name: '',\n  });\n  const history = useHistory();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    switch (type) {\n      case 'thumbnail':\n        setThumbnail(file);\n        break;\n      case 'banner':\n        setBanner(file);\n        break;\n      case 'gallery':\n        //handle multiple images\n        let files = e.target.files;\n        let filesArr = Array.from(files);\n        // filesArr.map((file) => {\n        //   setGallery([...gallery, file]);\n        // });\n        setGallery(e.target.files);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchMovie();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get(`${API_URL}category`);\n\n      setCategories(res.data.filter((category) => category.type === '2'));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchMovie = async () => {\n    try {\n      const res = await axios.get(`${API_URL}movie/${id}`);\n      console.log(res.data);\n      setIsLoaded(true);\n      setValues(res.data);\n      setThumbnail(res.data.image);\n      setBanner(res.data.banner);\n      setExistingGallery(res.data.gallery);\n      // categoreis\n\n      // get current categories\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(typeof values.category);\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n    data.append('title', values.title);\n    data.append('genre', values.genre);\n    if (values.releaseDate) {\n      data.append('releaseDate', values.releaseDate);\n    }\n    if (values.releaseDate == '') {\n      data.append('releaseDate', values.releaseDate);\n    }\n\n    if (typeof values.category === 'object') {\n      data.append('category', values.category._id);\n    } else {\n      data.append('category', values.category);\n    }\n\n    if (values.trailer) {\n      data.append('trailer', values.trailer);\n    }\n    if (values.trailer == '') {\n      data.append('trailer', values.trailer);\n    }\n\n    data.append('synopsis', values.synopsis);\n    data.append('image', thumbnail);\n    data.append('banner', banner);\n    // // add a image to data\n    // check gallery has files\n    if (gallery) {\n      let filesArr = Array.from(gallery);\n      filesArr.map((file, index) => {\n        data.append('gallery', file);\n      });\n    }\n\n    // axios\n    try {\n      let res = await axios.patch(`${API_URL}movie/${id}`, data, header);\n      console.log(res);\n\n      history.push(`/movie-edit/1/${id}`);\n      // setValues({});\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  const deleteGallery = async (image_id) => {\n    try {\n      const res = await axios.delete(\n        `${API_URL}movie/gallery/${id}/${image_id}`,\n        header\n      );\n      setExistingGallery(\n        [...existingGallery].filter((image) => image._id !== image_id)\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Movie'\n        pageContent='Edit Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Movie</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Title</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Title'\n                      name='title'\n                      required='false'\n                      value={values.title}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Genre</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Genre'\n                      name='genre'\n                      required='false'\n                      value={values.genre}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Category</label>\n                    <select\n                      type='text'\n                      name='category'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required='false'\n                      onChange={(e) => handleChange(e)}>\n                      {isLoaded && (\n                        <option value={values.category?._id}>\n                          {values.category?.title}\n                        </option>\n                      )}\n                      {/* <option value={values.category._id}>\n                        {values.category.title}\n                      </option> */}\n                      {isLoaded &&\n                        categories.map((category) => (\n                          <option key={category._id} value={category._id}>\n                            {category.title}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Trailer</label>\n                    <input\n                      type='url'\n                      className='form-control input-default '\n                      placeholder='Trailer'\n                      name='trailer'\n                      value={values.trailer}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Release Date</label>\n                    <input\n                      type='date'\n                      className='form-control input-default '\n                      placeholder='Release Date'\n                      name='releaseDate'\n                      value={moment(values.releaseDate).format('YYYY-MM-DD')}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Banner\n                      {\n                        // check the thumbnail is not an object\n                        typeof banner != 'object' && (\n                          <img\n                            src={banner}\n                            style={{\n                              width: '50px',\n                              height: '50px',\n                              marginLeft: 25,\n                            }}\n                          />\n                        )\n                      }\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.movieBanner}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Banner'\n                        name='banner'\n                        accept='image/*'\n                        onChange={(e) => handleFile(e, 'banner')}\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Thumbnail\n                      {\n                        // check the thumbnail is not an object\n                        typeof thumbnail != 'object' && (\n                          <img\n                            src={thumbnail}\n                            style={{\n                              width: '50px',\n                              height: '50px',\n                              marginLeft: 25,\n                            }}\n                          />\n                        )\n                      }\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.movieThumbnail}\n                      </small>\n                    </label>\n\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Thumbnail'\n                        name='thumbnail'\n                        accept='image/*'\n                        onChange={(e) => handleFile(e, 'thumbnail')}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='form-group col-md-12 mb-3'>\n                    <label htmlFor=''>Synopsis</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Synopsis'\n                      name='synopsis'\n                      required='false'\n                      value={values.synopsis}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Gallery</label>\n                    <small className='d-inline-block m-3'>\n                      Recommended Size (WxH) : {ImageSize.movieGallery}\n                    </small>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Gallery'\n                        multiple\n                        name='gallery[]'\n                        accept='image/*'\n                        onChange={(e) => handleFile(e, 'gallery')}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='row'>\n                      {existingGallery?.map((file, index) => (\n                        <div className='col-md-2 gallery-holder' key={index}>\n                          <img\n                            src={file.url}\n                            style={{ width: 50, height: 50 }}\n                          />\n                          <span\n                            onClick={() => deleteGallery(file._id)}\n                            className='trash-btn fa fa-trash'></span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Edit Movie\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditMovie;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\AddMovie.js",["399","400","401","402"],"import axios from 'axios';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst AddMovie = () => {\n  const initialValues = [];\n  const initialCategories = [];\n  const [values, setValues] = useState(initialValues);\n  const [thumbnail, setThumbnail] = useState('');\n  const [banner, setBanner] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [gallery, setGallery] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [categories, setCategories] = useState(initialCategories);\n  const history = useHistory();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e, type) => {\n    let file = e.target.files[0];\n    switch (type) {\n      case 'thumbnail':\n        setThumbnail(file);\n        break;\n      case 'banner':\n        setBanner(file);\n        break;\n      case 'gallery':\n        //handle multiple images\n        let files = e.target.files;\n        let filesArr = Array.from(files);\n        // filesArr.map((file) => {\n        //   setGallery([...gallery, file]);\n        // });\n        setGallery(e.target.files);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get(`${API_URL}category`);\n\n      setCategories(res.data.filter((category) => category.type === '2'));\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n\n    // form data with image\n    const data = new FormData();\n    data.append('title', values.title);\n    data.append('genre', values.genre);\n    data.append('category', values.category);\n    if (values.trailer) {\n      data.append('trailer', values.trailer);\n    }\n    if (values.trailer == '') {\n      data.append('trailer', values.trailer);\n    }\n    data.append('synopsis', values.synopsis);\n    data.append('image', thumbnail);\n    data.append('banner', banner);\n    if (values.releaseDate) {\n      data.append('releaseDate', values.releaseDate);\n    }\n    if (values.releaseDate == '') {\n      data.append('releaseDate', values.releaseDate);\n    }\n    // // add a image to data\n    if(gallery){\n      let filesArr = Array.from(gallery);\n      filesArr.map((file, index) => {\n        data.append('gallery', file);\n      });\n    }\n\n    // axios\n    try {\n      let res = await axios.post(`${API_URL}movie`, data, header);\n\n      document.querySelector('form').reset();\n      setSubmitting(false);\n      history.push(`/movie-add/1/${res.data._id}`);\n      // setValues({});\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Movie' pageContent='Add Movie' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Movie</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Title</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Title'\n                      name='title'\n                      required='false'\n                      value={values.title}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Genre</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Genre'\n                      name='genre'\n                      required='false'\n                      value={values.genre}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Category</label>\n                    <select\n                      type='text'\n                      name='category'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required='false'\n                      onChange={(e) => handleChange(e)}>\n                      <option value=''>------</option>\n                      {isLoaded &&\n                        categories.map((category) => (\n                          <option key={category._id} value={category._id}>\n                            {category.title}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Trailer</label>\n                    <input\n                      type='url'\n                      className='form-control input-default '\n                      placeholder='Trailer'\n                      name='trailer'\n                      required={false}\n                      value={values.trailer}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-4 mb-3'>\n                    <label htmlFor=''>Release Date</label>\n                    <input\n                      type='date'\n                      className='form-control input-default '\n                      placeholder='Release Date'\n                      name='releaseDate'\n                      value={moment(values.releaseDate).format('YYYY-MM-DD')}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Banner\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.movieBanner}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Banner'\n                        name='banner'\n                        accept='image/*'\n                        required='false'\n                        onChange={(e) => handleFile(e, 'banner')}\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Thumbnail\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.movieThumbnail}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Thumbnail'\n                        name='thumbnail'\n                        accept='image/*'\n                        required='false'\n                        onChange={(e) => handleFile(e, 'thumbnail')}\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Gallery\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.movieGallery}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='Gallery'\n                        multiple\n                        name='gallery[]'\n                        accept='image/*'\n                        onChange={(e) => handleFile(e, 'gallery')}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Synopsis</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Synopsis'\n                      name='synopsis'\n                      required='false'\n                      value={values.synopsis}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Add Movie\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMovie;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\movie\\ViewMovie.js",["403","404","405"],"import React, { useState, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\nimport moment from 'moment';\n\nconst ViewMovie = () => {\n  const history = useHistory();\n  const [movies, setMovie] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchMovie();\n  }, []);\n\n  const fetchMovie = async () => {\n    const response = await axios.get(`${API_URL}movie`, header);\n    setMovie(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}movie/${id}`, header);\n        swal('Success', 'Movie Deleted Successfully', 'success');\n        setMovie(movies.filter((movie) => movie._id !== id));\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/movie-edit/${id}`);\n  };\n  const handleView = (id) => {\n    history.push(`/movie-view/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='View'\n        motherMenu='Movie'\n        pageContent='View Movie'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View Movie</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Release Date</th>\n                          <th>Movie Title</th>\n                          <th>Image</th>\n                          <th>Genre</th>\n                          <th>Category</th>\n                          <th>Trailer</th>\n                          <th>Created At</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {movies.map(\n                          ({\n                            _id,\n                            title,\n                            releaseDate,\n                            image,\n                            genre,\n                            category,\n                            trailer,\n                            createdAt,\n                          }) => (\n                            <tr key={_id}>\n                              <td>\n                                {releaseDate ? moment(releaseDate).format('D-MM-YYYY') :'Not Given' }\n                              </td>\n                              <td>{title}</td>\n                              <td>\n                                <img\n                                  className='img-responsive img '\n                                  width='55'\n                                  height='55'\n                                  src={image}\n                                  style={{ borderRadius: '50%' }}\n                                  alt=''\n                                />\n                              </td>\n                              <td>{genre}</td>\n                              <td>{category}</td>\n                              <td>\n                                <a href={trailer} target='_blank'>\n                                  <span className='fab fa-youtube fa-2x'></span>\n                                </a>\n                              </td>\n\n                              <td>{createdAt}</td>\n                              <td>\n                                <span\n                                  className='btn btn-success shadow btn-xs sharp me-1'\n                                  onClick={() => handleView(_id)}>\n                                  <i className='fa fa-eye'></i>\n                                </span>\n                                <span\n                                  className='btn btn-dark shadow btn-xs sharp me-1'\n                                  onClick={() => handleEdit(_id)}>\n                                  <i className='fa fa-pen'></i>\n                                </span>\n                                <span\n                                  className='btn btn-danger shadow btn-xs sharp'\n                                  onClick={() => handleDelete(_id)}>\n                                  <i className='fa fa-trash'></i>\n                                </span>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewMovie;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\category\\EditCategory.js",["406","407"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst EditCategory = () => {\n  const history = useHistory();\n  const initialValues = [\n    {\n      type: '1',\n      title: '',\n    },\n  ];\n  const [values, setValues] = useState(initialValues);\n  const [submitting, setSubmitting] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  const { id } = useParams();\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    const data = {\n      type: values.type,\n      title: values.title,\n    };\n    // axios\n    try {\n      await axios.patch(`${API_URL}category/${id}`, data, header);\n      swal('Success', 'Category Updated Successfully', 'success');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n      history.goBack();\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n\n  const fetchCategory = async () => {\n    try {\n      const response = await axios.get(`${API_URL}category/${id}`, header);\n      setValues(response.data);\n    } catch (error) {\n      console.log(error);\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle\n        activeMenu='Edit'\n        motherMenu='Category'\n        pageContent='Edit Category'\n      />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Category</h4>\n            </div>\n            <div className='card-body'>\n              <form onSubmit={(e) => handleSubmit(e)}>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Type of Category</label>\n                    <select\n                      type='text'\n                      name='type'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value={values.type}>\n                        {values?.type == '1'\n                          ? 'News Category'\n                          : 'Movie Category'}\n                      </option>\n                      <option value='1'>News Category</option>\n                      <option value='2'>Movie Category</option>\n                    </select>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Category</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Category'\n                      name='title'\n                      required\n                      value={values.title}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-col-md-12'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Edit Category\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCategory;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\AddNews.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\ViewNews.js",["408","409","410"],"import React, { useState, useRef, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst ViewNews = () => {\n  const history = useHistory();\n  const [newses, setNews] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchNews();\n  }, []);\n\n  const fetchNews = async () => {\n    const response = await axios.get(`${API_URL}news`);\n    setNews(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}news/${id}`, header);\n        swal('Success', 'News Deleted Successfully', 'success');\n        setNews(newses.filter((news) => news._id !== id));\n      } catch (error) {\n        const { status } = error.response;\n\n        swal('Error', 'Something Went Wrong', 'error');\n        if (status === 401) {\n          localStorage.removeItem('userDetails');\n          window.location.reload();\n        }\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/news-edit/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='View' motherMenu='News' pageContent='View News' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View News</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Type</th>\n                          <th>Image</th>\n                          <th>Title</th>\n                          <th>Category</th>\n                          <th>Created By</th>\n                          <th>Created At</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {newses.map(\n                          ({\n                            _id,\n                            type,\n                            title,\n                            image,\n                            content,\n                            category,\n                            createdAt,\n                            createdBy,\n                          }) => (\n                            <tr key={_id}>\n                              <td>{type === '1' ? `Main News` : `Top News`}</td>\n                              <td>\n                                <img\n                                  className='img-responsive img'\n                                  width='55'\n                                  height='55'\n                                  src={image}\n                                  alt=''\n                                />\n                              </td>\n                              <td>{title}</td>\n                              <td>{category?.title}</td>\n                              <td>{createdBy?.name}</td>\n                              <td>{createdAt}</td>\n                              <td>\n                                <a\n                                  className='btn btn-success shadow btn-xs sharp me-1'\n                                  href={content}\n                                  target='_blank'>\n                                  <i className='fa fa-eye'></i>\n                                </a>\n                                <span\n                                  className='btn btn-dark shadow btn-xs sharp me-1'\n                                  onClick={() => handleEdit(_id)}>\n                                  <i className='fa fa-pen'></i>\n                                </span>\n                                <span\n                                  className='btn btn-danger shadow btn-xs sharp'\n                                  onClick={() => handleDelete(_id)}>\n                                  <i className='fa fa-trash'></i>\n                                </span>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewNews;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\EditNews.js",["411","412","413"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst EditNews = () => {\n  const initialValues = [\n    {\n      type: '1',\n      title: '',\n      category: '',\n      content: '',\n    },\n  ];\n  const initialCategories = [];\n  const { id } = useParams();\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [categories, setCategories] = useState(initialCategories);\n  const history = useHistory();\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values.category);\n    setSubmitting(true);\n    // check if the category is object or string\n\n    // get token from localstorage\n    const userDetails = localStorage.getItem('userDetails');\n    const user = JSON.parse(userDetails);\n    const token = user.token;\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: token,\n      },\n    };\n    // form data with image\n    const data = new FormData();\n    data.append('title', values.title);\n    if (typeof values.category === 'object') {\n      data.append('category', values.category?._id);\n    } else {\n      data.append('category', values.category);\n    }\n    if (typeof values.type === 'object') {\n      data.append('type', values.type?._id);\n    } else {\n      data.append('type', values.type);\n    }\n    data.append('content', values.content);\n    if (file) {\n      data.append('image', file);\n    }\n\n    // // axios\n    try {\n      await axios.patch(`${API_URL}news/${id}`, data, header);\n      swal('Success', 'News Updated Successfully', 'success');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n      history.goBack();\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchNews();\n    if (isLoaded) {\n      console.log(values);\n    }\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const res = await axios.get(`${API_URL}category`);\n\n      setCategories(res.data.filter((category) => category.type === '1'));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchNews = async () => {\n    try {\n      const res = await axios.get(`${API_URL}news/${id}`);\n      setValues(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Edit' motherMenu='News' pageContent='Edit News' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit News</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Type of News</label>\n                    <select\n                      type='text'\n                      name='type'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value={values.type}>\n                        {values?.type == '1' ? 'Default News' : 'Top News'}\n                      </option>\n                      <option value='1'>Default News </option>\n                      <option value='2'>Top News </option>\n                    </select>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Category</label>\n                    <select\n                      type='text'\n                      name='category'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      {isLoaded && (\n                        <option value={values.category?._id}>\n                          {values?.category?.title}\n                        </option>\n                      )}\n                      {isLoaded &&\n                        categories.map((category) => (\n                          <option key={category._id} value={category._id}>\n                            {category.title}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Title</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Title'\n                      name='title'\n                      required\n                      value={values.title}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image (leave blank for no change)\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : Top {ImageSize.topNews} <br />\n                        Default {ImageSize.defaultNews}\n                      </small>\n                    </label>\n                    <div className='from-file d-flex'>\n                      <img\n                        src={values.image}\n                        className='img img-responsive '\n                        width='55'\n                        height='55'\n                      />\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-12'>\n                    <label htmlFor=''>External URL</label>\n                    <input\n                      type='url'\n                      className='form-control input-default '\n                      placeholder='URL'\n                      name='content'\n                      required\n                      value={values.content}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Edit News\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditNews;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\news\\PressNews.js",["414"],"import React, { useState, useRef, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst PressNews = () => {\n  const history = useHistory();\n  const [newses, setNews] = useState([]);\n  const [orderedNews, setOrderedNews] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchNews();\n    fetchOrderedNews();\n  }, []);\n\n  const fetchNews = async () => {\n    const response = await axios.get(`${API_URL}news`);\n    setNews(response.data);\n  };\n  const fetchOrderedNews = async () => {\n    const response = await axios.get(`${API_URL}news/update/press`);\n    setOrderedNews(response.data);\n    console.log(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // get a checkbox multi checked value\n    const checkbox = document.querySelectorAll(\n      'input[type=\"checkbox\"]:checked'\n    );\n    const checkboxValues = Array.from(checkbox).map((c) => c.value);\n    if (checkboxValues.length < 2) {\n      swal('Please select any 3 checkbox', '', 'error');\n      return;\n    }\n\n    try {\n      await axios.post(\n        `${API_URL}news/update/press`,\n        {\n          newsIds: checkboxValues,\n        },\n        header\n      );\n      swal('Success', 'News Order Updated Successfully', 'success');\n      history.push('/news-view');\n    } catch (error) {\n      const { status } = error.response;\n\n      swal('Error', 'Something Went Wrong', 'error');\n      if (status === 401) {\n        localStorage.removeItem('userDetails');\n        window.location.reload();\n      }\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='View' motherMenu='News' pageContent='View News' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View News</h4>\n            </div>\n            {isLoaded && (\n              <div className='card-body'>\n                <div className='row'>\n                  {orderedNews.map(\n                    (news, index) =>\n                      index < 3 && (\n                        <div className='col-sm-4' key={news._id}>\n                          <div className='card'>\n                            <div className='card-body'>\n                              <img\n                                src={news.image}\n                                alt=''\n                                style={{ width: '100%', borderRadius: '5px' }}\n                              />\n                              <p>{news.title}</p>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                  )}\n                </div>\n              </div>\n            )}\n\n            <div className='card-body'>\n              <form onSubmit={(e) => handleSubmit(e)}>\n                <div className='table-responsive'>\n                  <div id='job_data' className='dataTables_wrapper'>\n                    {isLoaded ? (\n                      <table id='example' className='display'>\n                        <thead>\n                          <tr>\n                            <th>Select </th>\n                            <th style={{ width: '60px' }}>News Thumbnail</th>\n                            <th>News Title</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {newses.map(\n                            ({\n                              _id,\n                              type,\n                              title,\n                              image,\n                              category,\n                              createdAt,\n                              createdBy,\n                            }) => (\n                              <tr key={_id}>\n                                <td>\n                                  <input\n                                    type='checkbox'\n                                    name='selected'\n                                    value={_id}\n                                  />\n                                </td>\n                                <td>\n                                  <img\n                                    className='img-responsive img'\n                                    width='55'\n                                    height='55'\n                                    src={image}\n                                    alt=''\n                                  />\n                                </td>\n                                <td>{title}</td>\n                              </tr>\n                            )\n                          )}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <Loading />\n                    )}\n                  </div>\n                </div>\n                <button className='btn btn-xs btn-dark'>\n                  Set this as Press Release news\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PressNews;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\ViewCast.js",["415","416"],"import React, { useState, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst ViewCast = () => {\n  const history = useHistory();\n  const [casts, setCast] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchCast();\n  }, []);\n\n  const fetchCast = async () => {\n    const response = await axios.get(`${API_URL}cast`, header);\n    setCast(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}cast/${id}`, header);\n        swal('Success', 'Cast Deleted Successfully', 'success');\n        setCast(casts.filter((cast) => cast._id !== id));\n      } catch (error) {\n        swal('Error', 'Something Went Wrong', 'error');\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/cast-edit/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='View' motherMenu='Team' pageContent='View Team' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View Team</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Image</th>\n                          <th>Name</th>\n                          <th>Created At</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {casts.map(({ _id, name, image, createdAt }) => (\n                          <tr key={_id}>\n                            <td>\n                              <img\n                                className='img-responsive img '\n                                width='55'\n                                height='55'\n                                src={image}\n                                style={{ borderRadius: '50%' }}\n                                alt=''\n                              />\n                            </td>\n                            <td>{name}</td>\n                            <td>{createdAt}</td>\n                            <td>\n                              <span\n                                className='btn btn-dark shadow btn-xs sharp me-1'\n                                onClick={() => handleEdit(_id)}>\n                                <i className='fa fa-pen'></i>\n                              </span>\n                              <span\n                                className='btn btn-danger shadow btn-xs sharp'\n                                onClick={() => handleDelete(_id)}>\n                                <i className='fa fa-trash'></i>\n                              </span>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewCast;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\AddCast.js",["417"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst AddCast = () => {\n  const initialValues = [];\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n    // get token from localstorage\n    const userDetails = localStorage.getItem('userDetails');\n    const user = JSON.parse(userDetails);\n    const token = user.token;\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: token,\n      },\n    };\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n    data.append('image', file);\n    // add a image to data\n\n    // // axios\n    try {\n      await axios.post(`${API_URL}cast`, data, header);\n      swal('Success', 'Cast Added Successfully', 'success');\n      setValues({});\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Cast' pageContent='Add Cast' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Cast</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.starCast}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        required={false}\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Add Cast\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddCast;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\cast\\EditCast.js",["418","419"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst EditCast = () => {\n  const initialValues = [];\n  const { id } = useParams();\n  const [values, setValues] = useState(initialValues);\n  const [submitting, setSubmitting] = useState(false);\n  const [file, setFile] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const history = useHistory();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    // check if the category is object or string\n\n    // form data with image\n    const data = new FormData();\n    data.append('name', values.name);\n\n    if (file) {\n      data.append('image', file);\n    }\n\n    // // axios\n    try {\n      await axios.patch(`${API_URL}cast/${id}`, data, header);\n      swal('Success', 'Cast Updated Successfully', 'success');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n      history.goBack();\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  useEffect(() => {\n    fetchCast();\n    if (isLoaded) {\n      console.log(values);\n    }\n  }, []);\n\n  const fetchCast = async () => {\n    try {\n      const res = await axios.get(`${API_URL}cast/${id}`, header);\n      setValues(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Edit' motherMenu='Cast' pageContent='Edit Cast' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Cast</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image (leave blank for no change)\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.starCast}\n                      </small>\n                    </label>\n                    <div className='from-file d-flex'>\n                      <img\n                        src={values.image}\n                        className='img img-responsive '\n                        width='55'\n                        height='55'\n                      />\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Edit Cast\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCast;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\EditTeam.js",["420","421","422"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst EditTeam = () => {\n  const initialValues = [\n    {\n      type: '1',\n      title: '',\n      category: '',\n      content: '',\n    },\n  ];\n  const initialCategories = [];\n  const { id } = useParams();\n  const [values, setValues] = useState(initialValues);\n  const [file, setFile] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const history = useHistory();\n  // get token from localstorage\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    // check if the category is object or string\n\n    // form data with image\n    const data = new FormData();\n    data.append('type', values.type);\n    data.append('name', values.name);\n    data.append('designation', values.designation);\n    if (values.linkedin) {\n      data.append('linkedin', values.linkedin);\n    }\n    data.append('content', values.content);\n    if (file) {\n      data.append('image', file);\n    }\n\n    // // axios\n    try {\n      await axios.patch(`${API_URL}team/${id}`, data, header);\n      swal('Success', 'Team Updated Successfully', 'success');\n      document.querySelector('form').reset();\n      setSubmitting(false);\n      history.goBack();\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  useEffect(() => {\n    fetchTeam();\n    if (isLoaded) {\n      console.log(values);\n    }\n  }, []);\n\n  const fetchTeam = async () => {\n    try {\n      const res = await axios.get(`${API_URL}team/${id}`, header);\n      setValues(res.data);\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Edit' motherMenu='Team' pageContent='Edit Team' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Edit Team</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Type of Team </label>\n                    <select\n                      type='text'\n                      name='type'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value={values.type}>\n                        {values?.type === '1'\n                          ? ' Management'\n                          : values?.type === '2'\n                          ? 'Executives'\n                          : 'Advisory Board'}\n                      </option>\n                      <option value='1'>Management </option>\n                      <option value='2'>Executives </option>\n                      <option value='3'>Advisory Board</option>\n                    </select>\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Designation</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Designation'\n                      name='designation'\n                      required\n                      value={values.designation}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Linkedin URL</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Linkedin URL'\n                      name='linkedin'\n                      value={values.linkedin}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image (leave blank for no change)\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.teamMember}\n                      </small>\n                    </label>\n                    <div className='from-file d-flex'>\n                      <img\n                        src={values.image}\n                        className='img img-responsive '\n                        width='55'\n                        height='55'\n                      />\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-12'>\n                    <label htmlFor=''>Content</label>\n                    <textarea\n                      name='content'\n                      onChange={(e) => handleChange(e)}\n                      className='form-control h-300'\n                      value={values.content}></textarea>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Update Team Member\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditTeam;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\ViewTeam.js",["423","424"],"import React, { useState, useEffect } from 'react';\nimport PageTitle from '../../layouts/PageTitle';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { Link, useHistory } from 'react-router-dom';\nimport Loading from '../../components/Loading/Loading';\nimport swal from 'sweetalert';\n\nconst ViewTeam = () => {\n  const history = useHistory();\n  const [teams, setTeam] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const userDetails = localStorage.getItem('userDetails');\n  const user = JSON.parse(userDetails);\n  const token = user.token;\n  const header = {\n    headers: {\n      'Content-Type': 'application/json',\n      token: token,\n    },\n  };\n  // use effect\n  useEffect(() => {\n    fetchTeam();\n  }, []);\n\n  const fetchTeam = async () => {\n    const response = await axios.get(`${API_URL}team`);\n    setTeam(response.data);\n    setIsLoaded(true);\n    $('#example').DataTable();\n  };\n  const handleDelete = async (id) => {\n    const result = await swal({\n      title: 'Are you sure?',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    });\n    if (result) {\n      try {\n        await axios.delete(`${API_URL}team/${id}`, header);\n        swal('Success', 'Team Deleted Successfully', 'success');\n        setTeam(teams.filter((team) => team._id !== id));\n      } catch (error) {\n        swal('Error', 'Something Went Wrong', 'error');\n      }\n    }\n  };\n  const handleEdit = (id) => {\n    history.push(`/team-edit/${id}`);\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='View' motherMenu='Team' pageContent='View Team' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>View Team</h4>\n            </div>\n            <div className='card-body'>\n              <div className='table-responsive'>\n                <div id='job_data' className='dataTables_wrapper'>\n                  {isLoaded ? (\n                    <table id='example' className='display'>\n                      <thead>\n                        <tr>\n                          <th>Type</th>\n                          <th>Image</th>\n                          <th>Name</th>\n                          <th>Designation</th>\n                          <th>Linkedin</th>\n                          <th>Created At</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {teams.map(\n                          ({\n                            _id,\n                            type,\n                            name,\n                            image,\n                            designation,\n                            createdAt,\n                            linkedin,\n                          }) => (\n                            <tr key={_id}>\n                              <td>\n                                {type === '1'\n                                  ? `Management`\n                                  : type === '2'\n                                  ? `Executives`\n                                  : type === '3' && `Advisory Board`}\n                              </td>\n                              <td>\n                                <img\n                                  className='img-responsive img'\n                                  width='55'\n                                  height='55'\n                                  src={image}\n                                  alt=''\n                                />\n                              </td>\n                              <td>{name}</td>\n                              <td>{designation}</td>\n                              <td>\n                                {linkedin && (\n                                  <a href={linkedin} target='_blank'>\n                                    <span className='fab fa-linkedin fa-2x'></span>\n                                  </a>\n                                )}\n                              </td>\n                              <td>{createdAt}</td>\n                              <td>\n                                <span\n                                  className='btn btn-dark shadow btn-xs sharp me-1'\n                                  onClick={() => handleEdit(_id)}>\n                                  <i className='fa fa-pen'></i>\n                                </span>\n                                <span\n                                  className='btn btn-danger shadow btn-xs sharp'\n                                  onClick={() => handleDelete(_id)}>\n                                  <i className='fa fa-trash'></i>\n                                </span>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <Loading />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewTeam;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\pages\\team\\AddTeam.js",["425"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport swal from 'sweetalert';\nimport { API_URL, ImageSize } from '../../../config';\nimport LoadingButton from '../../components/LoadingButton';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst AddTeam = () => {\n  const initialValues = [\n    {\n      type: '1',\n      name: '',\n      designation: '',\n      linkedin: '',\n      content: '',\n    },\n  ];\n  const [values, setValues] = useState(initialValues);\n  const [submitting, setSubmitting] = useState(false);\n  const [file, setFile] = useState('');\n\n  const handleChange = (e) => {\n    // change the state value of the input by name\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleFile = (e) => {\n    let file = e.target.files[0];\n    setFile(file);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    setSubmitting(true);\n    // get token from localstorage\n    const userDetails = localStorage.getItem('userDetails');\n    const user = JSON.parse(userDetails);\n    const token = user.token;\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: token,\n      },\n    };\n    // form data with image\n    const data = new FormData();\n    data.append('type', values.type);\n    data.append('name', values.name);\n    data.append('designation', values.designation);\n    data.append('linkedin', values.linkedin);\n    data.append('content', values.content);\n    data.append('image', file);\n    // add a image to data\n\n    // // axios\n    try {\n      await axios.post(`${API_URL}team`, data, header);\n      swal('Success', 'Team Added Successfully', 'success');\n      setValues({});\n      document.querySelector('form').reset();\n      setSubmitting(false);\n    } catch (error) {\n      swal('Error', 'Something Went Wrong', 'error');\n    }\n  };\n\n  return (\n    <>\n      <PageTitle activeMenu='Add' motherMenu='Team' pageContent='Add Team' />\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header'>\n              <h4 className='card-title'>Add Team</h4>\n            </div>\n            <div className='card-body'>\n              <form\n                onSubmit={(e) => handleSubmit(e)}\n                encType='multipart/form-data'>\n                <div className='row'>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Type of Team </label>\n                    <select\n                      type='text'\n                      name='type'\n                      className='form-control input-default '\n                      placeholder='input-default'\n                      required\n                      onChange={(e) => handleChange(e)}>\n                      <option value=''>------</option>\n                      <option value='1'> Management </option>\n                      <option value='2'> Executives</option>\n                      <option value='3'>Advisory Board</option>\n                    </select>\n                  </div>\n\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Name</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Name'\n                      name='name'\n                      required\n                      value={values.name}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Designation</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Designation'\n                      name='designation'\n                      required\n                      value={values.designation}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>Linkedin URL</label>\n                    <input\n                      type='text'\n                      className='form-control input-default '\n                      placeholder='Linkedin URL'\n                      name='linkedin'\n                      value={values.linkedin}\n                      onChange={(e) => handleChange(e)}\n                    />\n                  </div>\n                  <div className='form-group col-md-6 mb-3'>\n                    <label htmlFor=''>\n                      Image\n                      <small className='d-inline-block m-3'>\n                        Recommended Size (WxH) : {ImageSize.teamMember}\n                      </small>\n                    </label>\n                    <div className='from-file'>\n                      <input\n                        type='file'\n                        className='form-file-input form-control'\n                        placeholder='image'\n                        name='image'\n                        required\n                        onChange={(e) => handleFile(e)}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-12'>\n                    <label htmlFor=''>Content</label>\n                    <textarea\n                      name='content'\n                      onChange={(e) => handleChange(e)}\n                      className='form-control h-300'>\n                      {values.content}\n                    </textarea>\n                  </div>\n\n                  <div className='form-col-md-12 mt-3'>\n                    {submitting ? (\n                      <LoadingButton />\n                    ) : (\n                      <button type='submit' className='btn btn-primary'>\n                        Add Team Member\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddTeam;\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\index.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\PageTitle.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\LoadingButton.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\Loading\\Loading.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\SideBar.js",["426","427","428","429","430","431","432","433","434","435","436","437","438","439"],"/// Menu\r\nimport Metismenu from 'metismenujs';\r\nimport React, { Component, useContext, useEffect } from 'react';\r\n/// Scroll\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n/// Link\r\nimport { Link } from 'react-router-dom';\r\nimport useScrollPosition from 'use-scroll-position';\r\nimport { ThemeContext } from '../../../context/ThemeContext';\r\nimport LogoutPage from './Logout';\r\n/// Image\r\n\r\nclass MM extends Component {\r\n  componentDidMount() {\r\n    this.$el = this.el;\r\n    this.mm = new Metismenu(this.$el);\r\n  }\r\n  componentWillUnmount() {}\r\n  render() {\r\n    return (\r\n      <div className='mm-wrapper'>\r\n        <ul className='metismenu' ref={(el) => (this.el = el)}>\r\n          {this.props.children}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SideBar = () => {\r\n  const { iconHover, sidebarposition, headerposition, sidebarLayout } =\r\n    useContext(ThemeContext);\r\n  useEffect(() => {\r\n    var btn = document.querySelector('.nav-control');\r\n    var aaa = document.querySelector('#main-wrapper');\r\n    function toggleFunc() {\r\n      return aaa.classList.toggle('menu-toggle');\r\n    }\r\n    btn.addEventListener('click', toggleFunc);\r\n\r\n    //sidebar icon Heart blast\r\n    var handleheartBlast = document.querySelector('.heart');\r\n    function heartBlast() {\r\n      return handleheartBlast.classList.toggle('heart-blast');\r\n    }\r\n    handleheartBlast.addEventListener('click', heartBlast);\r\n  }, []);\r\n  let scrollPosition = useScrollPosition();\r\n  /// Path\r\n  let path = window.location.pathname;\r\n  path = path.split('/');\r\n  path = path[path.length - 1];\r\n  /// Active menu\r\n  let deshBoard = [\r\n      '',\r\n      'dashboard-dark',\r\n      'search-jobs',\r\n      'applications',\r\n      'my-profile',\r\n      'statistics',\r\n      'companies',\r\n      'task',\r\n    ],\r\n    job = [\r\n      'job-list',\r\n      'job-view',\r\n      'job-application',\r\n      'apply-job',\r\n      'new-job',\r\n      'user-profile',\r\n    ],\r\n    category = ['category-add', 'category-view'],\r\n    news = ['news-add', 'news-view', 'news-press'],\r\n    team = ['team-add', 'team-view'],\r\n    cast = ['cast-add', 'cast-view'],\r\n    movie = ['movie-add', 'movie-view', 'movie-order'],\r\n    social = ['social-add', 'social-view'],\r\n    app = [\r\n      'app-profile',\r\n      'post-details',\r\n      'app-calender',\r\n      'email-compose',\r\n      'email-inbox',\r\n      'email-read',\r\n      'ecom-product-grid',\r\n      'ecom-product-list',\r\n      'ecom-product-order',\r\n      'ecom-checkout',\r\n      'ecom-invoice',\r\n      'ecom-customers',\r\n      'post-details',\r\n      'ecom-product-detail',\r\n    ],\r\n    email = ['email-compose', 'email-inbox', 'email-read'],\r\n    shop = [\r\n      'ecom-product-grid',\r\n      'ecom-product-list',\r\n      'ecom-product-list',\r\n      'ecom-product-order',\r\n      'ecom-checkout',\r\n      'ecom-invoice',\r\n      'ecom-customers',\r\n      'ecom-product-detail',\r\n    ],\r\n    charts = [\r\n      'chart-rechart',\r\n      'chart-flot',\r\n      'chart-chartjs',\r\n      'chart-chartist',\r\n      'chart-sparkline',\r\n      'chart-apexchart',\r\n    ],\r\n    bootstrap = [\r\n      'ui-accordion',\r\n      'ui-badge',\r\n      'ui-alert',\r\n      'ui-button',\r\n      'ui-modal',\r\n      'ui-button-group',\r\n      'ui-list-group',\r\n      'ui-media-object',\r\n      'ui-card',\r\n      'ui-carousel',\r\n      'ui-dropdown',\r\n      'ui-popover',\r\n      'ui-progressbar',\r\n      'ui-tab',\r\n      'ui-typography',\r\n      'ui-pagination',\r\n      'ui-grid',\r\n    ],\r\n    plugins = [\r\n      'uc-select2',\r\n      'uc-nestable',\r\n      'uc-sweetalert',\r\n      'uc-toastr',\r\n      'uc-noui-slider',\r\n      'map-jqvmap',\r\n      'uc-lightgallery',\r\n    ],\r\n    redux = ['redux-form', 'redux-wizard', 'todo'],\r\n    widget = ['widget-basic'],\r\n    banner = ['banner'],\r\n    aboutbanner = ['aboutbanner'],\r\n    forms = [\r\n      'form-element',\r\n      'form-wizard',\r\n      'form-editor-summernote',\r\n      'form-pickers',\r\n      'form-validation-jquery',\r\n    ],\r\n    table = ['table-bootstrap-basic', 'table-datatable-basic'],\r\n    pages = [\r\n      'page-register',\r\n      'page-login',\r\n      'page-lock-screen',\r\n      'page-error-400',\r\n      'page-error-403',\r\n      'page-error-404',\r\n      'page-error-500',\r\n      'page-error-503',\r\n    ],\r\n    error = [\r\n      'page-error-400',\r\n      'page-error-403',\r\n      'page-error-404',\r\n      'page-error-500',\r\n      'page-error-503',\r\n    ];\r\n\r\n  const userDetails = localStorage.getItem('userDetails');\r\n  const userInfo = JSON.parse(userDetails);\r\n  const User = userInfo.user;\r\n  return (\r\n    <div\r\n      className={`dlabnav ${iconHover} ${\r\n        sidebarposition.value === 'fixed' &&\r\n        sidebarLayout.value === 'horizontal' &&\r\n        headerposition.value === 'static'\r\n          ? scrollPosition > 120\r\n            ? 'fixed'\r\n            : ''\r\n          : ''\r\n      }`}>\r\n      <PerfectScrollbar className='dlabnav-scroll'>\r\n        {/* <Dropdown as='div' className=' header-profile2 dropdown'>\r\n          <Dropdown.Toggle\r\n            variant=''\r\n            as='a'\r\n            className='nav-link i-false c-pointer'\r\n            // href=\"#\"\r\n            role='button'\r\n            data-toggle='dropdown'>\r\n            <div className='header-info2 d-flex align-items-center'>\r\n              <img src={User.profile} width={20} alt='' />\r\n              <div className='d-flex align-items-center sidebar-info'>\r\n                <div>\r\n                  <span className='font-w400 d-block'>{User.name}</span>\r\n                  <small className='text-end font-w400'>{User.role}</small>\r\n                </div>\r\n                <i className='fas fa-chevron-down'></i>\r\n              </div>\r\n            </div>\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu\r\n            align='right'\r\n            className=' dropdown-menu dropdown-menu-end'>\r\n            <Link to='/app-profile' className='dropdown-item ai-icon'>\r\n              <svg\r\n                id='icon-user1'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                className='text-primary'\r\n                width={18}\r\n                height={18}\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                stroke='currentColor'\r\n                strokeWidth={2}\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'>\r\n                <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2' />\r\n                <circle cx={12} cy={7} r={4} />\r\n              </svg>\r\n              <span className='ms-2'>Profile </span>\r\n            </Link>\r\n            <Link to='/email-inbox' className='dropdown-item ai-icon'>\r\n              <svg\r\n                id='icon-inbox'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                className='text-success'\r\n                width={18}\r\n                height={18}\r\n                viewBox='0 0 24 24'\r\n                fill='none'\r\n                stroke='currentColor'\r\n                strokeWidth={2}\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'>\r\n                <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z' />\r\n                <polyline points='22,6 12,13 2,6' />\r\n              </svg>\r\n              <span className='ms-2'>Inbox </span>\r\n            </Link>\r\n            <LogoutPage />\r\n          </Dropdown.Menu>\r\n        </Dropdown> */}\r\n        <MM className='metismenu' id='menu'>\r\n          <li className={`${deshBoard.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link to='/' className='ai-icon'>\r\n              <i className='flaticon-025-dashboard'></i>\r\n              <span className='nav-text'>Dashboard</span>\r\n            </Link>\r\n          </li>\r\n          <li className={`${banner.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link to='/banner' className='ai-icon'>\r\n              <i className='flaticon-022-copy'></i>\r\n              <span className='nav-text'>Banner</span>\r\n            </Link>\r\n          </li>\r\n          <li className={`${aboutbanner.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link to='/aboutbanner' className='ai-icon'>\r\n              <i className='flaticon-022-copy'></i>\r\n              <span className='nav-text'>About Banner</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={`${category.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-093-waving'></i>\r\n              <span className='nav-text'>Category</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'category-add' ? 'mm-active' : ''}`}\r\n                  to='/category-add'>\r\n                  Add Category\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'category-view' ? 'mm-active' : ''}`}\r\n                  to='/category-view'>\r\n                  View Category\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className={`${news.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-381-calendar-1'></i>\r\n              <span className='nav-text'>News</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'news-add' ? 'mm-active' : ''}`}\r\n                  to='/news-add'>\r\n                  Add News\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'news-view' ? 'mm-active' : ''}`}\r\n                  to='/news-view'>\r\n                  View News\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'news-press' ? 'mm-active' : ''}`}\r\n                  to='/news-press'>\r\n                  Press Release\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li className={`${team.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-045-heart'></i>\r\n              <span className='nav-text'>Team</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'team-add' ? 'mm-active' : ''}`}\r\n                  to='/team-add'>\r\n                  Add Team\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'team-view' ? 'mm-active' : ''}`}\r\n                  to='/team-view'>\r\n                  View Team\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${cast.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-013-checkmark'></i>\r\n              <span className='nav-text'>Cast</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'cast-add' ? 'mm-active' : ''}`}\r\n                  to='/cast-add'>\r\n                  Add Cast\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'cast-view' ? 'mm-active' : ''}`}\r\n                  to='/cast-view'>\r\n                  View Cast\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${movie.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-022-copy'></i>\r\n              <span className='nav-text'>Movie</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'movie-add' ? 'mm-active' : ''}`}\r\n                  to='/movie-add'>\r\n                  Add Movie\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'movie-view' ? 'mm-active' : ''}`}\r\n                  to='/movie-view'>\r\n                  View Movie\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'movie-order' ? 'mm-active' : ''}`}\r\n                  to='/movie-order'>\r\n                  Allocate Movie\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${social.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow' to='#'>\r\n              <i className='flaticon-013-checkmark'></i>\r\n              <span className='nav-text'>Social</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'social-add' ? 'mm-active' : ''}`}\r\n                  to='/social-add'>\r\n                  Add Social\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'social-view' ? 'mm-active' : ''}`}\r\n                  to='/social-view'>\r\n                  View Social\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <LogoutPage />\r\n          </li>\r\n\r\n          {/* <li className={`${app.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-050-info'></i>\r\n              <span className='nav-text'>Apps</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'app-profile' ? 'mm-active' : ''}`}\r\n                  to='/app-profile'>\r\n                  Profile\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'post-details' ? 'mm-active' : ''}`}\r\n                  to='/post-details'>\r\n                  Post Details\r\n                </Link>\r\n              </li>\r\n              <li className={`${email.includes(path) ? 'mm-active' : ''}`}>\r\n                <Link className='has-arrow' to='#'>\r\n                  Email\r\n                </Link>\r\n                <ul className={`${email.includes(path) ? 'mm-show' : ''}`}>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'email-compose' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/email-compose'>\r\n                      Compose\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${path === 'email-inbox' ? 'mm-active' : ''}`}\r\n                      to='/email-inbox'>\r\n                      Inbox\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${path === 'email-read' ? 'mm-active' : ''}`}\r\n                      to='/email-read'>\r\n                      Read\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'app-calender' ? 'mm-active' : ''}`}\r\n                  to='/app-calender'>\r\n                  Calendar\r\n                </Link>\r\n              </li>\r\n              <li className={`${shop.includes(path) ? 'mm-active' : ''}`}>\r\n                <Link className='has-arrow' to='#'>\r\n                  Shop\r\n                </Link>\r\n                <ul className={`${shop.includes(path) ? 'mm-show' : ''}`}>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-product-grid' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-product-grid'>\r\n                      Product Grid\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-product-list' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-product-list'>\r\n                      Product List\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-product-detail' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-product-detail'>\r\n                      Product Details\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-product-order' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-product-order'>\r\n                      Order\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-checkout' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-checkout'>\r\n                      Checkout\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-invoice' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-invoice'>\r\n                      Invoice\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'ecom-customers' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/ecom-customers'>\r\n                      Customers\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${charts.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-041-graph'></i>\r\n              <span className='nav-text'>Charts</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'chart-rechart' ? 'mm-active' : ''}`}\r\n                  to='/chart-rechart'>\r\n                  RechartJs\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'chart-chartjs' ? 'mm-active' : ''}`}\r\n                  to='/chart-chartjs'>\r\n                  Chartjs\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'chart-chartist' ? 'mm-active' : ''}`}\r\n                  to='/chart-chartist'>\r\n                  Chartist\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'chart-sparkline' ? 'mm-active' : ''}`}\r\n                  to='/chart-sparkline'>\r\n                  Sparkline\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'chart-apexchart' ? 'mm-active' : ''}`}\r\n                  to='/chart-apexchart'>\r\n                  Apexchart\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${bootstrap.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-086-star'></i>\r\n              <span className='nav-text'>Bootstrap</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-accordion' ? 'mm-active' : ''}`}\r\n                  to='/ui-accordion'>\r\n                  Accordion\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-alert' ? 'mm-active' : ''}`}\r\n                  to='/ui-alert'>\r\n                  Alert\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-badge' ? 'mm-active' : ''}`}\r\n                  to='/ui-badge'>\r\n                  Badge\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-button' ? 'mm-active' : ''}`}\r\n                  to='/ui-button'>\r\n                  Button\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-modal' ? 'mm-active' : ''}`}\r\n                  to='/ui-modal'>\r\n                  Modal\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-button-group' ? 'mm-active' : ''}`}\r\n                  to='/ui-button-group'>\r\n                  Button Group\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-list-group' ? 'mm-active' : ''}`}\r\n                  to='/ui-list-group'>\r\n                  List Group\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-card' ? 'mm-active' : ''}`}\r\n                  to='/ui-card'>\r\n                  Cards\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-carousel' ? 'mm-active' : ''}`}\r\n                  to='/ui-carousel'>\r\n                  Carousel\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-dropdown' ? 'mm-active' : ''}`}\r\n                  to='/ui-dropdown'>\r\n                  Dropdown\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-popover' ? 'mm-active' : ''}`}\r\n                  to='/ui-popover'>\r\n                  Popover\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-progressbar' ? 'mm-active' : ''}`}\r\n                  to='/ui-progressbar'>\r\n                  Progressbar\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-tab' ? 'mm-active' : ''}`}\r\n                  to='/ui-tab'>\r\n                  Tab\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-typography' ? 'mm-active' : ''}`}\r\n                  to='/ui-typography'>\r\n                  Typography\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-pagination' ? 'mm-active' : ''}`}\r\n                  to='/ui-pagination'>\r\n                  Pagination\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'ui-grid' ? 'mm-active' : ''}`}\r\n                  to='/ui-grid'>\r\n                  Grid\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${plugins.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-045-heart'></i>\r\n              <span className='nav-text'>Plugins</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-select2' ? 'mm-active' : ''}`}\r\n                  to='/uc-select2'>\r\n                  Select 2\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-nestable' ? 'mm-active' : ''}`}\r\n                  to='/uc-nestable'>\r\n                  Nestedable\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-noui-slider' ? 'mm-active' : ''}`}\r\n                  to='/uc-noui-slider'>\r\n                  Noui Slider\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-sweetalert' ? 'mm-active' : ''}`}\r\n                  to='/uc-sweetalert'>\r\n                  Sweet Alert\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-toastr' ? 'mm-active' : ''}`}\r\n                  to='/uc-toastr'>\r\n                  Toastr\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'map-jqvmap' ? 'mm-active' : ''}`}\r\n                  to='/map-jqvmap'>\r\n                  Jqv Map\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'uc-lightgallery' ? 'mm-active' : ''}`}\r\n                  to='/uc-lightgallery'>\r\n                  Light Gallery\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${redux.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-087-stop'></i>\r\n              <span className='nav-text'>Redux</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'todo' ? 'mm-active' : ''}`}\r\n                  to='/todo'>\r\n                  Todo\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'redux-form' ? 'mm-active' : ''}`}\r\n                  to='/redux-form'>\r\n                  Redux Form\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'redux-wizard' ? 'mm-active' : ''}`}\r\n                  to='/redux-wizard'>\r\n                  Redux Wizard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${widget.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link to='widget-basic' className='ai-icon'>\r\n              <i className='flaticon-013-checkmark'></i>\r\n              <span className='nav-text'>Widget</span>\r\n            </Link>\r\n          </li>\r\n          <li className={`${forms.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-072-printer'></i>\r\n              <span className='nav-text forms'>Forms</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'form-element' ? 'mm-active' : ''}`}\r\n                  to='/form-element'>\r\n                  Form Elements\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'form-wizard' ? 'mm-active' : ''}`}\r\n                  to='/form-wizard'>\r\n                  Wizard\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${\r\n                    path === 'form-editor-summernote' ? 'mm-active' : ''\r\n                  }`}\r\n                  to='/form-editor-summernote'>\r\n                  Summernote\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'form-pickers' ? 'mm-active' : ''}`}\r\n                  to='/form-pickers'>\r\n                  Pickers\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${\r\n                    path === 'form-validation-jquery' ? 'mm-active' : ''\r\n                  }`}\r\n                  to='/form-validation-jquery'>\r\n                  Form Validate\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${table.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-043-menu'></i>\r\n              <span className='nav-text'>Table</span>\r\n            </Link>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'table-filtering' ? 'mm-active' : ''}`}\r\n                  to='/table-filtering'>\r\n                  Table Filtering\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${path === 'table-sorting' ? 'mm-active' : ''}`}\r\n                  to='/table-sorting'>\r\n                  Table Sorting\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${\r\n                    path === 'table-bootstrap-basic' ? 'mm-active' : ''\r\n                  }`}\r\n                  to='/table-bootstrap-basic'>\r\n                  Bootstrap\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${\r\n                    path === 'table-datatable-basic' ? 'mm-active' : ''\r\n                  }`}\r\n                  to='/table-datatable-basic'>\r\n                  Datatable\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className={`${pages.includes(path) ? 'mm-active' : ''}`}>\r\n            <Link className='has-arrow ai-icon' to='#'>\r\n              <i className='flaticon-022-copy'></i>\r\n              <span className='nav-text'>Pages</span>\r\n            </Link>\r\n            <ul>\r\n              <li className={`${error.includes(path) ? 'mm-active' : ''}`}>\r\n                <Link className='has-arrow' to='#'>\r\n                  Error\r\n                </Link>\r\n                <ul>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'page-error-400' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/page-error-400'>\r\n                      Error 400\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'page-error-403' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/page-error-403'>\r\n                      Error 403\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'page-error-404' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/page-error-404'>\r\n                      Error 404\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'page-error-500' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/page-error-500'>\r\n                      Error 500\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className={`${\r\n                        path === 'page-error-503' ? 'mm-active' : ''\r\n                      }`}\r\n                      to='/page-error-503'>\r\n                      Error 503\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  className={`${\r\n                    path === 'page-lock-screen' ? 'mm-active' : ''\r\n                  }`}\r\n                  to='/page-lock-screen'>\r\n                  Lock Screen\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li> */}\r\n        </MM>\r\n        <div className='plus-box'>\r\n          <p className='fs-14 font-w600 mb-2'>Golden Ratio Films</p>\r\n        </div>\r\n        <div className='copyright'>\r\n          <p>\r\n            <strong>GRF Admin</strong> © 2022 All Rights Reserved\r\n          </p>\r\n          <p className='fs-12'>\r\n            Developed by <span className='heart'></span> Nyx Wolves\r\n          </p>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\Header.js",["440","441","442","443","444","445"],"import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n/// Scroll\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n/// Image\r\n// import profile from '../../../images/profile/pic1.jpg';\r\n\r\nconst Header = ({ onNote }) => {\r\n  const [searchBut, setSearchBut] = useState(false);\r\n  var path = window.location.pathname.split('/');\r\n  var name = path[path.length - 1].split('-');\r\n  var filterName = name.length >= 3 ? name.filter((n, i) => i > 0) : name;\r\n  var finalName = filterName.includes('app')\r\n    ? filterName.filter((f) => f !== 'app')\r\n    : filterName.includes('ui')\r\n    ? filterName.filter((f) => f !== 'ui')\r\n    : filterName.includes('uc')\r\n    ? filterName.filter((f) => f !== 'uc')\r\n    : filterName.includes('basic')\r\n    ? filterName.filter((f) => f !== 'basic')\r\n    : filterName.includes('jquery')\r\n    ? filterName.filter((f) => f !== 'jquery')\r\n    : filterName.includes('table')\r\n    ? filterName.filter((f) => f !== 'table')\r\n    : filterName.includes('page')\r\n    ? filterName.filter((f) => f !== 'page')\r\n    : filterName.includes('email')\r\n    ? filterName.filter((f) => f !== 'email')\r\n    : filterName.includes('ecom')\r\n    ? filterName.filter((f) => f !== 'ecom')\r\n    : filterName.includes('chart')\r\n    ? filterName.filter((f) => f !== 'chart')\r\n    : filterName.includes('editor')\r\n    ? filterName.filter((f) => f !== 'editor')\r\n    : filterName;\r\n\r\n  const userDetails = localStorage.getItem('userDetails');\r\n  const userInfo = JSON.parse(userDetails);\r\n  const Profile = userInfo.user.profile;\r\n  return (\r\n    <div className='header'>\r\n      <div className='header-content'>\r\n        <nav className='navbar navbar-expand'>\r\n          <div className='collapse navbar-collapse justify-content-between'>\r\n            <div className='header-left'>\r\n              <div\r\n                className='dashboard_bar'\r\n                style={{ textTransform: 'capitalize' }}></div>\r\n              <div className='nav-item d-flex align-items-center'></div>\r\n            </div>\r\n            {/* <ul className='navbar-nav header-right main-notification'>\r\n              <li className='nav-item header-profile'>\r\n                <Link\r\n                  to={'#'}\r\n                  className='nav-link'\r\n                  role='button'\r\n                  data-bs-toggle='dropdown'>\r\n                  <img src={Profile} width='20' alt='' />\r\n                </Link>\r\n              </li>\r\n            </ul> */}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\ChatBox.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\NavHader.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\layouts\\nav\\Logout.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Alerts.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Notes.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\Chat.js",[],"C:\\Users\\nachi\\OneDrive\\Desktop\\GRF\\golden-ratio-films-admin-dev\\src\\jsx\\components\\chatBox\\MsgBox.js",[],{"ruleId":"446","severity":1,"message":"447","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":14},{"ruleId":"446","severity":1,"message":"450","line":4,"column":3,"nodeType":"448","messageId":"449","endLine":4,"endColumn":17},{"ruleId":"446","severity":1,"message":"451","line":3,"column":8,"nodeType":"448","messageId":"449","endLine":3,"endColumn":24},{"ruleId":"446","severity":1,"message":"452","line":7,"column":8,"nodeType":"448","messageId":"449","endLine":7,"endColumn":13},{"ruleId":"446","severity":1,"message":"453","line":8,"column":8,"nodeType":"448","messageId":"449","endLine":8,"endColumn":13},{"ruleId":"446","severity":1,"message":"454","line":9,"column":8,"nodeType":"448","messageId":"449","endLine":9,"endColumn":13},{"ruleId":"446","severity":1,"message":"455","line":10,"column":8,"nodeType":"448","messageId":"449","endLine":10,"endColumn":13},{"ruleId":"446","severity":1,"message":"456","line":11,"column":8,"nodeType":"448","messageId":"449","endLine":11,"endColumn":13},{"ruleId":"446","severity":1,"message":"457","line":12,"column":8,"nodeType":"448","messageId":"449","endLine":12,"endColumn":13},{"ruleId":"446","severity":1,"message":"458","line":16,"column":10,"nodeType":"448","messageId":"449","endLine":16,"endColumn":20},{"ruleId":"446","severity":1,"message":"459","line":16,"column":22,"nodeType":"448","messageId":"449","endLine":16,"endColumn":35},{"ruleId":"446","severity":1,"message":"460","line":43,"column":5,"nodeType":"448","messageId":"449","endLine":43,"endColumn":17},{"ruleId":"446","severity":1,"message":"461","line":4,"column":22,"nodeType":"448","messageId":"449","endLine":4,"endColumn":31},{"ruleId":"446","severity":1,"message":"462","line":14,"column":9,"nodeType":"448","messageId":"449","endLine":14,"endColumn":16},{"ruleId":"446","severity":1,"message":"463","line":66,"column":9,"nodeType":"448","messageId":"449","endLine":66,"endColumn":21},{"ruleId":"446","severity":1,"message":"464","line":77,"column":15,"nodeType":"448","messageId":"449","endLine":77,"endColumn":18},{"ruleId":"465","severity":1,"message":"466","line":88,"column":6,"nodeType":"467","endLine":88,"endColumn":8,"suggestions":"468"},{"ruleId":"446","severity":1,"message":"469","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":33},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"446","severity":1,"message":"461","line":4,"column":22,"nodeType":"448","messageId":"449","endLine":4,"endColumn":31},{"ruleId":"446","severity":1,"message":"462","line":14,"column":9,"nodeType":"448","messageId":"449","endLine":14,"endColumn":16},{"ruleId":"446","severity":1,"message":"464","line":74,"column":15,"nodeType":"448","messageId":"449","endLine":74,"endColumn":18},{"ruleId":"465","severity":1,"message":"466","line":85,"column":6,"nodeType":"467","endLine":85,"endColumn":8,"suggestions":"470"},{"ruleId":"446","severity":1,"message":"469","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":33},{"ruleId":"446","severity":1,"message":"471","line":8,"column":8,"nodeType":"448","messageId":"449","endLine":8,"endColumn":9},{"ruleId":"446","severity":1,"message":"462","line":16,"column":9,"nodeType":"448","messageId":"449","endLine":16,"endColumn":16},{"ruleId":"465","severity":1,"message":"472","line":34,"column":6,"nodeType":"467","endLine":34,"endColumn":8,"suggestions":"473"},{"ruleId":"446","severity":1,"message":"474","line":88,"column":17,"nodeType":"448","messageId":"449","endLine":88,"endColumn":21},{"ruleId":"446","severity":1,"message":"469","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":33},{"ruleId":"465","severity":1,"message":"475","line":78,"column":6,"nodeType":"467","endLine":78,"endColumn":8,"suggestions":"476"},{"ruleId":"477","severity":1,"message":"478","line":149,"column":25,"nodeType":"479","endLine":154,"endColumn":27},{"ruleId":"465","severity":1,"message":"480","line":25,"column":6,"nodeType":"467","endLine":25,"endColumn":8,"suggestions":"481"},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":19},{"ruleId":"446","severity":1,"message":"483","line":18,"column":10,"nodeType":"448","messageId":"449","endLine":18,"endColumn":18},{"ruleId":"446","severity":1,"message":"484","line":18,"column":20,"nodeType":"448","messageId":"449","endLine":18,"endColumn":31},{"ruleId":"446","severity":1,"message":"485","line":7,"column":8,"nodeType":"448","messageId":"449","endLine":7,"endColumn":15},{"ruleId":"446","severity":1,"message":"486","line":15,"column":10,"nodeType":"448","messageId":"449","endLine":15,"endColumn":14},{"ruleId":"446","severity":1,"message":"487","line":15,"column":16,"nodeType":"448","messageId":"449","endLine":15,"endColumn":23},{"ruleId":"446","severity":1,"message":"464","line":45,"column":11,"nodeType":"448","messageId":"449","endLine":45,"endColumn":14},{"ruleId":"465","severity":1,"message":"480","line":65,"column":6,"nodeType":"467","endLine":65,"endColumn":8,"suggestions":"488"},{"ruleId":"446","severity":1,"message":"485","line":7,"column":8,"nodeType":"448","messageId":"449","endLine":7,"endColumn":15},{"ruleId":"446","severity":1,"message":"486","line":16,"column":10,"nodeType":"448","messageId":"449","endLine":16,"endColumn":14},{"ruleId":"446","severity":1,"message":"487","line":16,"column":16,"nodeType":"448","messageId":"449","endLine":16,"endColumn":23},{"ruleId":"446","severity":1,"message":"464","line":64,"column":13,"nodeType":"448","messageId":"449","endLine":64,"endColumn":16},{"ruleId":"465","severity":1,"message":"480","line":88,"column":6,"nodeType":"467","endLine":88,"endColumn":8,"suggestions":"489"},{"ruleId":"490","severity":1,"message":"491","line":85,"column":9,"nodeType":"492","messageId":"493","endLine":85,"endColumn":13},{"ruleId":"446","severity":1,"message":"464","line":113,"column":15,"nodeType":"448","messageId":"449","endLine":113,"endColumn":18},{"ruleId":"465","severity":1,"message":"494","line":138,"column":6,"nodeType":"467","endLine":138,"endColumn":8,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":233,"column":47,"nodeType":"498","messageId":"493","endLine":233,"endColumn":49},{"ruleId":"496","severity":1,"message":"497","line":234,"column":46,"nodeType":"498","messageId":"493","endLine":234,"endColumn":48},{"ruleId":"496","severity":1,"message":"497","line":235,"column":46,"nodeType":"498","messageId":"493","endLine":235,"endColumn":48},{"ruleId":"446","severity":1,"message":"464","line":100,"column":15,"nodeType":"448","messageId":"449","endLine":100,"endColumn":18},{"ruleId":"465","severity":1,"message":"494","line":119,"column":6,"nodeType":"467","endLine":119,"endColumn":8,"suggestions":"499"},{"ruleId":"446","severity":1,"message":"471","line":8,"column":8,"nodeType":"448","messageId":"449","endLine":8,"endColumn":9},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"446","severity":1,"message":"500","line":13,"column":8,"nodeType":"448","messageId":"449","endLine":13,"endColumn":12},{"ruleId":"446","severity":1,"message":"501","line":16,"column":8,"nodeType":"448","messageId":"449","endLine":16,"endColumn":17},{"ruleId":"446","severity":1,"message":"502","line":17,"column":8,"nodeType":"448","messageId":"449","endLine":17,"endColumn":17},{"ruleId":"446","severity":1,"message":"503","line":18,"column":8,"nodeType":"448","messageId":"449","endLine":18,"endColumn":17},{"ruleId":"446","severity":1,"message":"504","line":19,"column":8,"nodeType":"448","messageId":"449","endLine":19,"endColumn":17},{"ruleId":"446","severity":1,"message":"505","line":20,"column":8,"nodeType":"448","messageId":"449","endLine":20,"endColumn":17},{"ruleId":"446","severity":1,"message":"506","line":21,"column":8,"nodeType":"448","messageId":"449","endLine":21,"endColumn":17},{"ruleId":"446","severity":1,"message":"507","line":22,"column":8,"nodeType":"448","messageId":"449","endLine":22,"endColumn":17},{"ruleId":"446","severity":1,"message":"508","line":23,"column":8,"nodeType":"448","messageId":"449","endLine":23,"endColumn":17},{"ruleId":"446","severity":1,"message":"509","line":24,"column":8,"nodeType":"448","messageId":"449","endLine":24,"endColumn":15},{"ruleId":"446","severity":1,"message":"510","line":25,"column":10,"nodeType":"448","messageId":"449","endLine":25,"endColumn":18},{"ruleId":"446","severity":1,"message":"511","line":25,"column":20,"nodeType":"448","messageId":"449","endLine":25,"endColumn":26},{"ruleId":"446","severity":1,"message":"512","line":25,"column":28,"nodeType":"448","messageId":"449","endLine":25,"endColumn":33},{"ruleId":"446","severity":1,"message":"513","line":27,"column":10,"nodeType":"448","messageId":"449","endLine":27,"endColumn":14},{"ruleId":"446","severity":1,"message":"462","line":30,"column":9,"nodeType":"448","messageId":"449","endLine":30,"endColumn":16},{"ruleId":"465","severity":1,"message":"514","line":47,"column":6,"nodeType":"467","endLine":47,"endColumn":8,"suggestions":"515"},{"ruleId":"446","severity":1,"message":"516","line":65,"column":10,"nodeType":"448","messageId":"449","endLine":65,"endColumn":21},{"ruleId":"446","severity":1,"message":"517","line":65,"column":23,"nodeType":"448","messageId":"449","endLine":65,"endColumn":37},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":19},{"ruleId":"446","severity":1,"message":"485","line":7,"column":8,"nodeType":"448","messageId":"449","endLine":7,"endColumn":15},{"ruleId":"446","severity":1,"message":"486","line":16,"column":10,"nodeType":"448","messageId":"449","endLine":16,"endColumn":14},{"ruleId":"446","severity":1,"message":"487","line":16,"column":16,"nodeType":"448","messageId":"449","endLine":16,"endColumn":23},{"ruleId":"446","severity":1,"message":"464","line":61,"column":13,"nodeType":"448","messageId":"449","endLine":61,"endColumn":16},{"ruleId":"490","severity":1,"message":"491","line":84,"column":9,"nodeType":"492","messageId":"493","endLine":84,"endColumn":13},{"ruleId":"446","severity":1,"message":"464","line":112,"column":15,"nodeType":"448","messageId":"449","endLine":112,"endColumn":18},{"ruleId":"465","severity":1,"message":"494","line":137,"column":6,"nodeType":"467","endLine":137,"endColumn":8,"suggestions":"518"},{"ruleId":"496","severity":1,"message":"497","line":228,"column":47,"nodeType":"498","messageId":"493","endLine":228,"endColumn":49},{"ruleId":"496","severity":1,"message":"497","line":229,"column":46,"nodeType":"498","messageId":"493","endLine":229,"endColumn":48},{"ruleId":"496","severity":1,"message":"497","line":230,"column":46,"nodeType":"498","messageId":"493","endLine":230,"endColumn":48},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":19},{"ruleId":"446","severity":1,"message":"485","line":7,"column":8,"nodeType":"448","messageId":"449","endLine":7,"endColumn":15},{"ruleId":"446","severity":1,"message":"486","line":15,"column":10,"nodeType":"448","messageId":"449","endLine":15,"endColumn":14},{"ruleId":"446","severity":1,"message":"487","line":15,"column":16,"nodeType":"448","messageId":"449","endLine":15,"endColumn":23},{"ruleId":"446","severity":1,"message":"464","line":45,"column":11,"nodeType":"448","messageId":"449","endLine":45,"endColumn":14},{"ruleId":"446","severity":1,"message":"464","line":101,"column":15,"nodeType":"448","messageId":"449","endLine":101,"endColumn":18},{"ruleId":"465","severity":1,"message":"494","line":120,"column":6,"nodeType":"467","endLine":120,"endColumn":8,"suggestions":"519"},{"ruleId":"446","severity":1,"message":"520","line":24,"column":10,"nodeType":"448","messageId":"449","endLine":24,"endColumn":20},{"ruleId":"446","severity":1,"message":"521","line":24,"column":22,"nodeType":"448","messageId":"449","endLine":24,"endColumn":35},{"ruleId":"446","severity":1,"message":"522","line":59,"column":13,"nodeType":"448","messageId":"449","endLine":59,"endColumn":21},{"ruleId":"465","severity":1,"message":"514","line":75,"column":6,"nodeType":"467","endLine":75,"endColumn":8,"suggestions":"523"},{"ruleId":"496","severity":1,"message":"524","line":115,"column":28,"nodeType":"498","messageId":"493","endLine":115,"endColumn":30},{"ruleId":"496","severity":1,"message":"524","line":128,"column":24,"nodeType":"498","messageId":"493","endLine":128,"endColumn":26},{"ruleId":"525","severity":1,"message":"526","line":139,"column":34,"nodeType":"527","messageId":"528","endLine":139,"endColumn":36},{"ruleId":"446","severity":1,"message":"464","line":163,"column":13,"nodeType":"448","messageId":"449","endLine":163,"endColumn":16},{"ruleId":"477","severity":1,"message":"478","line":273,"column":27,"nodeType":"479","endLine":280,"endColumn":29},{"ruleId":"477","severity":1,"message":"478","line":304,"column":27,"nodeType":"479","endLine":311,"endColumn":29},{"ruleId":"477","severity":1,"message":"478","line":364,"column":27,"nodeType":"479","endLine":367,"endColumn":29},{"ruleId":"446","severity":1,"message":"522","line":52,"column":13,"nodeType":"448","messageId":"449","endLine":52,"endColumn":21},{"ruleId":"496","severity":1,"message":"524","line":93,"column":24,"nodeType":"498","messageId":"493","endLine":93,"endColumn":26},{"ruleId":"496","severity":1,"message":"524","line":102,"column":28,"nodeType":"498","messageId":"493","endLine":102,"endColumn":30},{"ruleId":"525","severity":1,"message":"526","line":108,"column":34,"nodeType":"527","messageId":"528","endLine":108,"endColumn":36},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"465","severity":1,"message":"514","line":32,"column":6,"nodeType":"467","endLine":32,"endColumn":8,"suggestions":"529"},{"ruleId":"530","severity":1,"message":"531","line":130,"column":33,"nodeType":"479","messageId":"532","endLine":130,"endColumn":67,"fix":"533"},{"ruleId":"465","severity":1,"message":"534","line":62,"column":6,"nodeType":"467","endLine":62,"endColumn":8,"suggestions":"535"},{"ruleId":"496","severity":1,"message":"524","line":106,"column":39,"nodeType":"498","messageId":"493","endLine":106,"endColumn":41},{"ruleId":"446","severity":1,"message":"469","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":33},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"530","severity":1,"message":"531","line":119,"column":33,"nodeType":"479","messageId":"532","endLine":122,"endColumn":51,"fix":"536"},{"ruleId":"465","severity":1,"message":"537","line":90,"column":6,"nodeType":"467","endLine":90,"endColumn":8,"suggestions":"538"},{"ruleId":"496","severity":1,"message":"524","line":141,"column":39,"nodeType":"498","messageId":"493","endLine":141,"endColumn":41},{"ruleId":"477","severity":1,"message":"478","line":190,"column":23,"nodeType":"479","endLine":195,"endColumn":25},{"ruleId":"446","severity":1,"message":"469","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":33},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"465","severity":1,"message":"539","line":31,"column":6,"nodeType":"467","endLine":31,"endColumn":8,"suggestions":"540"},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":19},{"ruleId":"465","severity":1,"message":"541","line":69,"column":6,"nodeType":"467","endLine":69,"endColumn":8,"suggestions":"542"},{"ruleId":"477","severity":1,"message":"478","line":116,"column":23,"nodeType":"479","endLine":121,"endColumn":25},{"ruleId":"446","severity":1,"message":"543","line":18,"column":9,"nodeType":"448","messageId":"449","endLine":18,"endColumn":26},{"ruleId":"465","severity":1,"message":"544","line":82,"column":6,"nodeType":"467","endLine":82,"endColumn":8,"suggestions":"545"},{"ruleId":"477","severity":1,"message":"478","line":173,"column":23,"nodeType":"479","endLine":178,"endColumn":25},{"ruleId":"446","severity":1,"message":"447","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":14},{"ruleId":"530","severity":1,"message":"531","line":117,"column":35,"nodeType":"479","messageId":"532","endLine":117,"endColumn":70,"fix":"546"},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":19},{"ruleId":"446","severity":1,"message":"547","line":64,"column":5,"nodeType":"448","messageId":"449","endLine":64,"endColumn":8},{"ruleId":"446","severity":1,"message":"548","line":78,"column":5,"nodeType":"448","messageId":"449","endLine":78,"endColumn":8},{"ruleId":"446","severity":1,"message":"549","line":94,"column":5,"nodeType":"448","messageId":"449","endLine":94,"endColumn":10},{"ruleId":"446","severity":1,"message":"550","line":95,"column":5,"nodeType":"448","messageId":"449","endLine":95,"endColumn":9},{"ruleId":"446","severity":1,"message":"551","line":105,"column":5,"nodeType":"448","messageId":"449","endLine":105,"endColumn":11},{"ruleId":"446","severity":1,"message":"552","line":113,"column":5,"nodeType":"448","messageId":"449","endLine":113,"endColumn":14},{"ruleId":"446","severity":1,"message":"553","line":132,"column":5,"nodeType":"448","messageId":"449","endLine":132,"endColumn":12},{"ruleId":"446","severity":1,"message":"554","line":141,"column":5,"nodeType":"448","messageId":"449","endLine":141,"endColumn":10},{"ruleId":"446","severity":1,"message":"555","line":142,"column":5,"nodeType":"448","messageId":"449","endLine":142,"endColumn":11},{"ruleId":"446","severity":1,"message":"556","line":145,"column":5,"nodeType":"448","messageId":"449","endLine":145,"endColumn":10},{"ruleId":"446","severity":1,"message":"557","line":152,"column":5,"nodeType":"448","messageId":"449","endLine":152,"endColumn":10},{"ruleId":"446","severity":1,"message":"558","line":153,"column":5,"nodeType":"448","messageId":"449","endLine":153,"endColumn":10},{"ruleId":"446","severity":1,"message":"559","line":163,"column":5,"nodeType":"448","messageId":"449","endLine":163,"endColumn":10},{"ruleId":"446","severity":1,"message":"560","line":173,"column":9,"nodeType":"448","messageId":"449","endLine":173,"endColumn":13},{"ruleId":"446","severity":1,"message":"447","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":14},{"ruleId":"446","severity":1,"message":"451","line":5,"column":8,"nodeType":"448","messageId":"449","endLine":5,"endColumn":24},{"ruleId":"446","severity":1,"message":"561","line":11,"column":10,"nodeType":"448","messageId":"449","endLine":11,"endColumn":19},{"ruleId":"446","severity":1,"message":"562","line":11,"column":21,"nodeType":"448","messageId":"449","endLine":11,"endColumn":33},{"ruleId":"446","severity":1,"message":"563","line":15,"column":7,"nodeType":"448","messageId":"449","endLine":15,"endColumn":16},{"ruleId":"446","severity":1,"message":"564","line":41,"column":9,"nodeType":"448","messageId":"449","endLine":41,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'runLogoutTimer' is defined but never used.","'PerfectScrollbar' is defined but never used.","'demo1' is defined but never used.","'demo2' is defined but never used.","'demo3' is defined but never used.","'demo4' is defined but never used.","'demo5' is defined but never used.","'demo6' is defined but never used.","'demoToggle' is assigned a value but never used.","'setDemoToggle' is assigned a value but never used.","'setDemoTheme' is assigned a value but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBanners'. Either include it or remove the dependency array.","ArrayExpression",["565"],"'useRef' is defined but never used.",["566"],"'$' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchMovies' and 'fetchOrderedMovies'. Either include them or remove the dependency array.",["567"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSocial'. Either include it or remove the dependency array.",["568"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["569"],"'useEffect' is defined but never used.","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'Loading' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.",["570"],["571"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'fetchAllCasts', 'fetchCasts', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["572"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression",["573"],"'swal' is defined but never used.","'profile01' is defined but never used.","'profile02' is defined but never used.","'profile03' is defined but never used.","'profile04' is defined but never used.","'profile05' is defined but never used.","'profile06' is defined but never used.","'profile07' is defined but never used.","'profile08' is defined but never used.","'profile' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'move' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMovie'. Either include it or remove the dependency array.",["574"],"'sendMessage' is assigned a value but never used.","'setSendMessage' is assigned a value but never used.",["575"],["576"],"'currentCat' is assigned a value but never used.","'setCurrentCat' is assigned a value but never used.","'filesArr' is assigned a value but never used.",["577"],"Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["578"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"579","text":"580"},"React Hook useEffect has a missing dependency: 'fetchCategory'. Either include it or remove the dependency array.",["581"],{"range":"582","text":"580"},"React Hook useEffect has missing dependencies: 'fetchNews', 'isLoaded', and 'values'. Either include them or remove the dependency array.",["583"],"React Hook useEffect has a missing dependency: 'fetchCast'. Either include it or remove the dependency array.",["584"],"React Hook useEffect has missing dependencies: 'fetchCast', 'isLoaded', and 'values'. Either include them or remove the dependency array.",["585"],"'initialCategories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchTeam', 'isLoaded', and 'values'. Either include them or remove the dependency array.",["586"],{"range":"587","text":"580"},"'job' is assigned a value but never used.","'app' is assigned a value but never used.","'email' is assigned a value but never used.","'shop' is assigned a value but never used.","'charts' is assigned a value but never used.","'bootstrap' is assigned a value but never used.","'plugins' is assigned a value but never used.","'redux' is assigned a value but never used.","'widget' is assigned a value but never used.","'forms' is assigned a value but never used.","'table' is assigned a value but never used.","'pages' is assigned a value but never used.","'error' is assigned a value but never used.","'User' is assigned a value but never used.","'searchBut' is assigned a value but never used.","'setSearchBut' is assigned a value but never used.","'finalName' is assigned a value but never used.","'Profile' is assigned a value but never used.",{"desc":"588","fix":"589"},{"desc":"588","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"595","fix":"597"},{"desc":"595","fix":"598"},{"desc":"599","fix":"600"},{"desc":"599","fix":"601"},{"desc":"602","fix":"603"},{"desc":"599","fix":"604"},{"desc":"599","fix":"605"},{"desc":"602","fix":"606"},{"desc":"602","fix":"607"},[4421,4421]," rel=\"noreferrer\"",{"desc":"608","fix":"609"},[4281,4281],{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},[4099,4099],"Update the dependencies array to be: [fetchBanners]",{"range":"618","text":"619"},{"range":"620","text":"619"},"Update the dependencies array to be: [fetchMovies, fetchOrderedMovies]",{"range":"621","text":"622"},"Update the dependencies array to be: [fetchSocial]",{"range":"623","text":"624"},"Update the dependencies array to be: [fetchData]",{"range":"625","text":"626"},{"range":"627","text":"626"},{"range":"628","text":"626"},"Update the dependencies array to be: [fetchAllCasts, fetchCasts, values]",{"range":"629","text":"630"},{"range":"631","text":"630"},"Update the dependencies array to be: [fetchMovie]",{"range":"632","text":"633"},{"range":"634","text":"630"},{"range":"635","text":"630"},{"range":"636","text":"633"},{"range":"637","text":"633"},"Update the dependencies array to be: [fetchCategory]",{"range":"638","text":"639"},"Update the dependencies array to be: [fetchNews, isLoaded, values]",{"range":"640","text":"641"},"Update the dependencies array to be: [fetchCast]",{"range":"642","text":"643"},"Update the dependencies array to be: [fetchCast, isLoaded, values]",{"range":"644","text":"645"},"Update the dependencies array to be: [fetchTeam, isLoaded, values]",{"range":"646","text":"647"},[2489,2491],"[fetchBanners]",[2387,2389],[1115,1117],"[fetchMovies, fetchOrderedMovies]",[2133,2135],"[fetchSocial]",[699,701],"[fetchData]",[1809,1811],[2489,2491],[3736,3738],"[fetchAllCasts, fetchCasts, values]",[3306,3308],[1742,1744],"[fetchMovie]",[3716,3718],[3307,3309],[2118,2120],[1011,1013],[1716,1718],"[fetchCategory]",[2524,2526],"[fetchNews, isLoaded, values]",[978,980],"[fetchCast]",[1900,1902],"[fetchCast, isLoaded, values]",[2235,2237],"[fetchTeam, isLoaded, values]"]