{"version":3,"sources":["jsx/pages/Registration.js"],"names":["connect","state","errorMessage","auth","successMessage","showLoading","props","useState","email","setEmail","errorsObj","password","errors","setErrors","setPassword","name","setName","dispatch","useDispatch","className","to","src","logo","alt","onSubmit","e","preventDefault","error","errorObj","loadingToggleAction","signupAction","history","value","onChange","target","placeholder","type","defaultValue","minLength"],"mappings":"2NAyIeA,uBARS,SAACC,GACvB,MAAO,CACLC,aAAcD,EAAME,KAAKD,aACzBE,eAAgBH,EAAME,KAAKC,eAC3BC,YAAaJ,EAAME,KAAKE,YAE3B,GAEcL,EA/Hf,SAAkBM,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAY,CAAEF,MAAO,GAAIG,SAAU,IACvC,EAA4BJ,mBAASG,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAgCN,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBG,EAAjB,KACA,EAAwBP,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEMC,EAAWC,cAuBjB,OACE,qBAAKC,UAAU,8BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,sDAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,SACE,qBAAKC,IAAKC,IAAMC,IAAI,SAGxB,oBAAIJ,UAAU,oBAAd,kCACCb,EAAMJ,cACL,qBAAKiB,UAAU,GAAf,SAAmBb,EAAMJ,eAE1BI,EAAMF,gBACL,qBAAKe,UAAU,GAAf,SAAmBb,EAAMF,iBAE3B,uBAAMoB,SA1CxB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,GAAQ,EACNC,EAAQ,eAAQlB,GACR,KAAVF,IACFoB,EAASpB,MAAQ,oBACjBmB,GAAQ,GAEO,KAAbhB,IACFiB,EAASjB,SAAW,uBACpBgB,GAAQ,GAEG,KAATZ,IACFa,EAASb,KAAO,mBAChBY,GAAQ,GAEVd,EAAUe,GACND,IACJV,EAASY,aAAoB,IAC7BZ,EAASa,YAAaf,EAAMP,EAAOG,EAAUL,EAAMyB,UACpD,EAsBiB,UACE,sBAAKZ,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAjB,SACE,iDAEF,uBACEa,MAAOjB,EACPkB,SAAU,SAACR,GAAD,OAAOT,EAAQS,EAAES,OAAOF,MAAxB,EACVb,UAAU,eACVgB,YAAY,WACZC,KAAK,YAGRxB,EAAOG,MAAQ,8BAAMH,EAAOG,OAC7B,sBAAKI,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAjB,SACE,6CAEF,uBACEa,MAAOxB,EACPyB,SAAU,SAACR,GAAD,OAAOhB,EAASgB,EAAES,OAAOF,MAAzB,EACVb,UAAU,eACVgB,YAAY,oBACZC,KAAK,aAGRxB,EAAOJ,OAAS,8BAAMI,EAAOJ,QAC9B,sBAAKW,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAjB,SACE,gDAEF,uBACEa,MAAOrB,EACPsB,SAAU,SAACR,GAAD,OAAOX,EAAYW,EAAES,OAAOF,MAA5B,EACVb,UAAU,eACVkB,aAAa,WACbD,KAAK,WACLE,UAAW,OAGd1B,EAAOD,UAAY,8BAAMC,EAAOD,WACjC,qBAAKQ,UAAU,mBAAf,SACE,wBACEiB,KAAK,SACLjB,UAAU,4BAFZ,6BAOJ,qBAAKA,UAAU,mBAAf,SACE,oBAAGA,UAAU,GAAb,qCAC2B,IACzB,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,SAAlC,0CAcvB,G","file":"static/js/5.45cedfef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport {\r\n  loadingToggleAction,\r\n  signupAction,\r\n} from '../../store/actions/AuthActions';\r\n// image\r\nimport logo from '../../images/logo-full.png';\r\n\r\nfunction Register(props) {\r\n  const [email, setEmail] = useState('');\r\n  let errorsObj = { email: '', password: '' };\r\n  const [errors, setErrors] = useState(errorsObj);\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function onSignUp(e) {\r\n    e.preventDefault();\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n    if (email === '') {\r\n      errorObj.email = 'Email is Required';\r\n      error = true;\r\n    }\r\n    if (password === '') {\r\n      errorObj.password = 'Password is Required';\r\n      error = true;\r\n    }\r\n    if (name === '') {\r\n      errorObj.name = 'Name is Required';\r\n      error = true;\r\n    }\r\n    setErrors(errorObj);\r\n    if (error) return;\r\n    dispatch(loadingToggleAction(true));\r\n    dispatch(signupAction(name, email, password, props.history));\r\n  }\r\n  return (\r\n    <div className='authincation h-100 p-meddle'>\r\n      <div className='container h-100'>\r\n        <div className='row justify-content-center h-100 align-items-center'>\r\n          <div className='col-md-6'>\r\n            <div className='authincation-content'>\r\n              <div className='row no-gutters'>\r\n                <div className='col-xl-12'>\r\n                  <div className='auth-form'>\r\n                    <div className='text-center mb-3'>\r\n                      <Link to='/login'>\r\n                        <img src={logo} alt='' />\r\n                      </Link>\r\n                    </div>\r\n                    <h4 className='text-center mb-4 '>Sign up your account</h4>\r\n                    {props.errorMessage && (\r\n                      <div className=''>{props.errorMessage}</div>\r\n                    )}\r\n                    {props.successMessage && (\r\n                      <div className=''>{props.successMessage}</div>\r\n                    )}\r\n                    <form onSubmit={onSignUp}>\r\n                      <div className='form-group mb-3'>\r\n                        <label className='mb-1 '>\r\n                          <strong>Full Name</strong>\r\n                        </label>\r\n                        <input\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                          className='form-control'\r\n                          placeholder='John Doe'\r\n                          type='text'\r\n                        />\r\n                      </div>\r\n                      {errors.name && <div>{errors.name}</div>}\r\n                      <div className='form-group mb-3'>\r\n                        <label className='mb-1 '>\r\n                          <strong>Email</strong>\r\n                        </label>\r\n                        <input\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                          className='form-control'\r\n                          placeholder='hello@example.com'\r\n                          type='email'\r\n                        />\r\n                      </div>\r\n                      {errors.email && <div>{errors.email}</div>}\r\n                      <div className='form-group mb-3'>\r\n                        <label className='mb-1 '>\r\n                          <strong>Password</strong>\r\n                        </label>\r\n                        <input\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                          className='form-control'\r\n                          defaultValue='Password'\r\n                          type='password'\r\n                          minLength={6}\r\n                        />\r\n                      </div>\r\n                      {errors.password && <div>{errors.password}</div>}\r\n                      <div className='text-center mt-4'>\r\n                        <button\r\n                          type='submit'\r\n                          className='btn btn-primary btn-block'>\r\n                          Sign me up\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                    <div className='new-account mt-3'>\r\n                      <p className=''>\r\n                        Already have an account?{' '}\r\n                        <Link className='text-primary' to='/login'>\r\n                          Sign in\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n"],"sourceRoot":""}